var $MT, $M = {},
$Form; (function() {
    String.prototype.replaceAll = function(s1, s2) {
        return this.replace(new RegExp(s1, "gm"), s2);
    };
    String.prototype.trim = function() {
        return this.replace(/(^\s*)|(\s*$)/g, "");
    };
    String.prototype.ltrim = function() {
        return this.replace(/(^\s*)/g, "");
    };
    String.prototype.rtrim = function() {
        return this.replace(/(\s*$)/g, "");
    };
    $t = {
        /**
		 * 解析 value 中的<、>、<>、==等字符为相反意义的汉字
		 *
		 * @param {Object}
		 *            value
		 */
        explainCompare: function(value) {
            return value.replaceAll("<>", "等于").replaceAll("<=", "大于").replaceAll(">=", "小于").replaceAll("<", "大于等于").replaceAll(">", "小于等于");
        },
        /**
		 * 获取指定id或者name的元素，如果要获取多个id或者name，可以传入 'name,pass,id'这样的 参数，返回一个数组
		 *
		 * @param {Object}
		 *            name
		 */
        $: function(eleid) {
            var array = new Array();
            var idArr = eleid.split(',');
            for (var i = 0; i < idArr.length; i++) {
                var sr = document.getElementById(idArr[i]);
                if (sr) {
                    array.push(sr);
                } else {
                    sr = document.getElementsByName(idArr[i]);
                    for (var k = 0; k < sr.length; k++) {
                        array.push(sr[k]);
                    }
                }
            }
            return array.length > 1 ? array: array[0];
        },
        /**
		 * 获取eleid元素的值
		 *
		 * @param {Object}
		 *            eleid
		 */
        $value: function(eleid) {
            return $t.$(eleid).value;
        },
        /**
		 * 获取name元素的选择个数
		 *
		 * @param {Object}
		 *            name
		 */
        $checkNum: function(eleid) {
            var num = 0;
            var checks = document.getElementsByName(eleid);
            for (var i = 0; i < checks.length; i++) {
                if (checks[i].checked) num++;
            };
            return num;
        },
        /**
		 * 获取o的类型
		 *
		 * @param {Object}
		 *            o
		 */
        $type: function(o) {
            var _t;
            return ((_t = typeof(o)) === "object" ? o === null && "null" || Object.prototype.toString.call(o).slice(8, -1) : _t).toLowerCase();
        },
        /**
		 * 是否是ie
		 */
        $ie: !-[1, ],
        /**
		 * 添加事件
		 *
		 * @param {Object}
		 *            ele 目标元素
		 * @param {Object}
		 *            event 事件，不要‘on’
		 * @param {Object}
		 *            fc 函数
		 * @param {Object}
		 *            master 宿主
		 * @param {Object}
		 *            argus 参数数组 例如
		 */
        $addEvent: function(ele, eventName, fc, master, argus) {
            var eventHandel = function() {
                fc();
            };
            if (master && !argus) {
                eventHandel = function() {
                    fc.apply(master);
                }
            } else if (!master && argus) {
                eventHandel = function() {
                    fc.apply(null, argus);
                }
            } else if (master && argus) {
                eventHandel = function() {
                    fc.apply(master, argus);
                }
            }
            try{
            	if ($t.$ie) ele.attachEvent("on" + eventName, eventHandel);
            	else ele.addEventListener(eventName, eventHandel, false);
            }catch(e){
            }
        },
        /**
		 * 是否有样式
		 *
		 * @param control
		 * @param className
		 * @returns
		 */
        hasClass: function(control, className) {
            return control.className.match(new RegExp('(\\s|^)' + className + '(\\s|$)'));
        },
        /**
		 * 检查是否有样式并添加样式
		 *
		 * @param control
		 * @param className
		 */
        addClass: function(control, className) {
            if (!$t.hasClass(control, className)) control.className += " " + className;
        },
        /**
		 * 不检查是否有样式并添加样式
		 *
		 * @param control
		 * @param className
		 */
        addClassUnCheck: function(control, className) {
            control.className += " " + className;
        },
        /**
		 * 检查是否有样式并移除样式
		 *
		 * @param control
		 * @param className
		 */
        removeClass: function(control, className) {
            if ($t.hasClass(control, className)) {
                var reg = new RegExp('(\\s|^)' + className + '(\\s|$)');
                control.className = control.className.replace(reg, ' ');
            }
        },
        /**
		 * 不检查是否有样式并移除样式
		 *
		 * @param control
		 * @param className
		 */
        removeClassUnCheck: function(control, className) {
            var reg = new RegExp('(\\s|^)' + className + '(\\s|$)');
            control.className = control.className.replace(reg, ' ');
        },
        /**
		 * 在targetControl后追加newControl
		 *
		 * @param newControl
		 * @param targetControl
		 */
        insertAfter: function(newControl, targetControl) {
            var parentControl = targetControl.parentNode;
            if (parentControl.lastChild === targetControl) parentControl.appendChild(newControl);
            else parentControl.insertBefore(newControl, targetControl.nextSibling);
        },
        /**
		 * 获取网站根路径
		 *
		 * @returns
		 */
        getBasePath: function() {
            var strFullPath = window.document.location.href;
            var strPath = window.document.location.pathname;
            var pos = strFullPath.indexOf(strPath);
            var prePath = strFullPath.substring(0, pos);
            var postPath = strPath.substring(0, strPath.substr(1).indexOf('/') + 1);
            return prePath + postPath;
        },
        /**
		 * 获取自己的路径
		 */
        getPath: function() {
            var strFullPath = window.document.location.href;
            var pos = strFullPath.lastIndexOf("/");
            var path = strFullPath.substring(0, pos);
            return path + "/";
        },
        /**
		 * 导入js
		 *
		 * @param src
		 * @param charset
		 */
        imPortJs: function(src, charset) {
            charset = charset || "GB2312";
            document.write("<script src=\"" + src + "\" charset=\"" + charset + "\" ></script>");
        },
        /**
		 * 导入css
		 *
		 * @param src
		 */
        importCss: function(src) {
            document.write("<link href=\"" + src + "\" rel=\"stylesheet\" type=\"text/css\">");
        },
        alert: function(obj) {
            var props = "";
            for (var p in obj) {
                if (typeof(obj[p]) != "function") {
                    props += p + "=" + obj[p] + "\t";
                }
            }
            alert(props);
        },
        /**
		 * 防止重复提交
		 */
        norepeatsend: function(formname) {
            var form = document.getElementById(formname) || document.forms[formname];
            if (!form) return;
            for (var i = 0; i < form.elements.length; i++) {
                if (form.elements[i].type == "button" || form.elements[i].type == "submit" || form.elements[i].type == "reset" || form.elements[i].type == "checkbox") {
                    form.elements[i].disabled = true
                } else if (form.elements[i].type == "text" || form.elements[i].tagName == "TEXTAREA" || form.elements[i].type == "radio" || form.elements[i].type == "select") {
                    form.elements[i].readOnly = true
                }
            }
        },
        /**
		 * 获取字符串长度，根据全角、半角
		 */
        getLength: function(value) {
            var lengthSelf = 0;
            for (var i = 0; i < value.length; i++) {
                if (value.charCodeAt(i) < 27 || value.charCodeAt(i) > 126) lengthSelf += 2;
                else lengthSelf++;
            }
            return lengthSelf;
        },
        dwr: function(str) {
            var lengths = str.indexOf('(');
            var method = str.substr(0, lengths);
            var params = str.substr(lengths + 1, str.length - lengths - 2).split(',');

            var exeParam = "";
            for (var i = 0; i < params.length; i++) {
                if (params[i].indexOf("^") != -1) {
                    var tempname = params[i].slice(0, -1);
                    var tempele = document.getElementById(tempname) || document.getElementsByName(tempname)[0];
                    exeParam += "'" + tempele.value + "',"
                } else {
                    exeParam += "'" + params[i] + "',"
                }
            }
            exeParam = exeParam.slice(0, -1);
            var exeString = method + "(" + exeParam + ",result)";
            dwr.engine.setAsync(false);
            eval(exeString);
            var resultTemp;
            function result(data) {
                resultTemp = data;
            }
            dwr.engine.setAsync(true);
            return resultTemp
        },
        makePY: function(str) {
            var strChineseFirstPY = "YDYQSXMWZSSXJBYMGCCZQPSSQBYCDSCDQLDYLYBSSJGYZZJJFKCCLZDHWDWZJLJPFYYNWJJTMYHZWZHFLZPPQHGSCYYYNJQYXXGJHHSDSJNKKTMOMLCRXYPSNQSECCQZGGLLYJLMYZZSECYKYYHQWJSSGGYXYZYJWWKDJHYCHMYXJTLXJYQBYXZLDWRDJRWYSRLDZJPCBZJJBRCFTLECZSTZFXXZHTRQHYBDLYCZSSYMMRFMYQZPWWJJYFCRWFDFZQPYDDWYXKYJAWJFFXYPSFTZYHHYZYSWCJYXSCLCXXWZZXNBGNNXBXLZSZSBSGPYSYZDHMDZBQBZCWDZZYYTZHBTSYYBZGNTNXQYWQSKBPHHLXGYBFMJEBJHHGQTJCYSXSTKZHLYCKGLYSMZXYALMELDCCXGZYRJXSDLTYZCQKCNNJWHJTZZCQLJSTSTBNXBTYXCEQXGKWJYFLZQLYHYXSPSFXLMPBYSXXXYDJCZYLLLSJXFHJXPJBTFFYABYXBHZZBJYZLWLCZGGBTSSMDTJZXPTHYQTGLJSCQFZKJZJQNLZWLSLHDZBWJNCJZYZSQQYCQYRZCJJWYBRTWPYFTWEXCSKDZCTBZHYZZYYJXZCFFZZMJYXXSDZZOTTBZLQWFCKSZSXFYRLNYJMBDTHJXSQQCCSBXYYTSYFBXDZTGBCNSLCYZZPSAZYZZSCJCSHZQYDXLBPJLLMQXTYDZXSQJTZPXLCGLQTZWJBHCTSYJSFXYEJJTLBGXSXJMYJQQPFZASYJNTYDJXKJCDJSZCBARTDCLYJQMWNQNCLLLKBYBZZSYHQQLTWLCCXTXLLZNTYLNEWYZYXCZXXGRKRMTCNDNJTSYYSSDQDGHSDBJGHRWRQLYBGLXHLGTGXBQJDZPYJSJYJCTMRNYMGRZJCZGJMZMGXMPRYXKJNYMSGMZJYMKMFXMLDTGFBHCJHKYLPFMDXLQJJSMTQGZSJLQDLDGJYCALCMZCSDJLLNXDJFFFFJCZFMZFFPFKHKGDPSXKTACJDHHZDDCRRCFQYJKQCCWJDXHWJLYLLZGCFCQDSMLZPBJJPLSBCJGGDCKKDEZSQCCKJGCGKDJTJDLZYCXKLQSCGJCLTFPCQCZGWPJDQYZJJBYJHSJDZWGFSJGZKQCCZLLPSPKJGQJHZZLJPLGJGJJTHJJYJZCZMLZLYQBGJWMLJKXZDZNJQSYZMLJLLJKYWXMKJLHSKJGBMCLYYMKXJQLBMLLKMDXXKWYXYSLMLPSJQQJQXYXFJTJDXMXXLLCXQBSYJBGWYMBGGBCYXPJYGPEPFGDJGBHBNSQJYZJKJKHXQFGQZKFHYGKHDKLLSDJQXPQYKYBNQSXQNSZSWHBSXWHXWBZZXDMNSJBSBKBBZKLYLXGWXDRWYQZMYWSJQLCJXXJXKJEQXSCYETLZHLYYYSDZPAQYZCMTLSHTZCFYZYXYLJSDCJQAGYSLCQLYYYSHMRQQKLDXZSCSSSYDYCJYSFSJBFRSSZQSBXXPXJYSDRCKGJLGDKZJZBDKTCSYQPYHSTCLDJDHMXMCGXYZHJDDTMHLTXZXYLYMOHYJCLTYFBQQXPFBDFHHTKSQHZYYWCNXXCRWHOWGYJLEGWDQCWGFJYCSNTMYTOLBYGWQWESJPWNMLRYDZSZTXYQPZGCWXHNGPYXSHMYQJXZTDPPBFYHZHTJYFDZWKGKZBLDNTSXHQEEGZZYLZMMZYJZGXZXKHKSTXNXXWYLYAPSTHXDWHZYMPXAGKYDXBHNHXKDPJNMYHYLPMGOCSLNZHKXXLPZZLBMLSFBHHGYGYYGGBHSCYAQTYWLXTZQCEZYDQDQMMHTKLLSZHLSJZWFYHQSWSCWLQAZYNYTLSXTHAZNKZZSZZLAXXZWWCTGQQTDDYZTCCHYQZFLXPSLZYGPZSZNGLNDQTBDLXGTCTAJDKYWNSYZLJHHZZCWNYYZYWMHYCHHYXHJKZWSXHZYXLYSKQYSPSLYZWMYPPKBYGLKZHTYXAXQSYSHXASMCHKDSCRSWJPWXSGZJLWWSCHSJHSQNHCSEGNDAQTBAALZZMSSTDQJCJKTSCJAXPLGGXHHGXXZCXPDMMHLDGTYBYSJMXHMRCPXXJZCKZXSHMLQXXTTHXWZFKHCCZDYTCJYXQHLXDHYPJQXYLSYYDZOZJNYXQEZYSQYAYXWYPDGXDDXSPPYZNDLTWRHXYDXZZJHTCXMCZLHPYYYYMHZLLHNXMYLLLMDCPPXHMXDKYCYRDLTXJCHHZZXZLCCLYLNZSHZJZZLNNRLWHYQSNJHXYNTTTKYJPYCHHYEGKCTTWLGQRLGGTGTYGYHPYHYLQYQGCWYQKPYYYTTTTLHYHLLTYTTSPLKYZXGZWGPYDSSZZDQXSKCQNMJJZZBXYQMJRTFFBTKHZKBXLJJKDXJTLBWFZPPTKQTZTGPDGNTPJYFALQMKGXBDCLZFHZCLLLLADPMXDJHLCCLGYHDZFGYDDGCYYFGYDXKSSEBDHYKDKDKHNAXXYBPBYYHXZQGAFFQYJXDMLJCSQZLLPCHBSXGJYNDYBYQSPZWJLZKSDDTACTBXZDYZYPJZQSJNKKTKNJDJGYYPGTLFYQKASDNTCYHBLWDZHBBYDWJRYGKZYHEYYFJMSDTYFZJJHGCXPLXHLDWXXJKYTCYKSSSMTWCTTQZLPBSZDZWZXGZAGYKTYWXLHLSPBCLLOQMMZSSLCMBJCSZZKYDCZJGQQDSMCYTZQQLWZQZXSSFPTTFQMDDZDSHDTDWFHTDYZJYQJQKYPBDJYYXTLJHDRQXXXHAYDHRJLKLYTWHLLRLLRCXYLBWSRSZZSYMKZZHHKYHXKSMDSYDYCJPBZBSQLFCXXXNXKXWYWSDZYQOGGQMMYHCDZTTFJYYBGSTTTYBYKJDHKYXBELHTYPJQNFXFDYKZHQKZBYJTZBXHFDXKDASWTAWAJLDYJSFHBLDNNTNQJTJNCHXFJSRFWHZFMDRYJYJWZPDJKZYJYMPCYZNYNXFBYTFYFWYGDBNZZZDNYTXZEMMQBSQEHXFZMBMFLZZSRXYMJGSXWZJSPRYDJSJGXHJJGLJJYNZZJXHGXKYMLPYYYCXYTWQZSWHWLYRJLPXSLSXMFSWWKLCTNXNYNPSJSZHDZEPTXMYYWXYYSYWLXJQZQXZDCLEEELMCPJPCLWBXSQHFWWTFFJTNQJHJQDXHWLBYZNFJLALKYYJLDXHHYCSTYYWNRJYXYWTRMDRQHWQCMFJDYZMHMYYXJWMYZQZXTLMRSPWWCHAQBXYGZYPXYYRRCLMPYMGKSJSZYSRMYJSNXTPLNBAPPYPYLXYYZKYNLDZYJZCZNNLMZHHARQMPGWQTZMXXMLLHGDZXYHXKYXYCJMFFYYHJFSBSSQLXXNDYCANNMTCJCYPRRNYTYQNYYMBMSXNDLYLYSLJRLXYSXQMLLYZLZJJJKYZZCSFBZXXMSTBJGNXYZHLXNMCWSCYZYFZLXBRNNNYLBNRTGZQYSATSWRYHYJZMZDHZGZDWYBSSCSKXSYHYTXXGCQGXZZSHYXJSCRHMKKBXCZJYJYMKQHZJFNBHMQHYSNJNZYBKNQMCLGQHWLZNZSWXKHLJHYYBQLBFCDSXDLDSPFZPSKJYZWZXZDDXJSMMEGJSCSSMGCLXXKYYYLNYPWWWGYDKZJGGGZGGSYCKNJWNJPCXBJJTQTJWDSSPJXZXNZXUMELPXFSXTLLXCLJXJJLJZXCTPSWXLYDHLYQRWHSYCSQYYBYAYWJJJQFWQCQQCJQGXALDBZZYJGKGXPLTZYFXJLTPADKYQHPMATLCPDCKBMTXYBHKLENXDLEEGQDYMSAWHZMLJTWYGXLYQZLJEEYYBQQFFNLYXRDSCTGJGXYYNKLLYQKCCTLHJLQMKKZGCYYGLLLJDZGYDHZWXPYSJBZKDZGYZZHYWYFQYTYZSZYEZZLYMHJJHTSMQWYZLKYYWZCSRKQYTLTDXWCTYJKLWSQZWBDCQYNCJSRSZJLKCDCDTLZZZACQQZZDDXYPLXZBQJYLZLLLQDDZQJYJYJZYXNYYYNYJXKXDAZWYRDLJYYYRJLXLLDYXJCYWYWNQCCLDDNYYYNYCKCZHXXCCLGZQJGKWPPCQQJYSBZZXYJSQPXJPZBSBDSFNSFPZXHDWZTDWPPTFLZZBZDMYYPQJRSDZSQZSQXBDGCPZSWDWCSQZGMDHZXMWWFYBPDGPHTMJTHZSMMBGZMBZJCFZWFZBBZMQCFMBDMCJXLGPNJBBXGYHYYJGPTZGZMQBQTCGYXJXLWZKYDPDYMGCFTPFXYZTZXDZXTGKMTYBBCLBJASKYTSSQYYMSZXFJEWLXLLSZBQJJJAKLYLXLYCCTSXMCWFKKKBSXLLLLJYXTYLTJYYTDPJHNHNNKBYQNFQYYZBYYESSESSGDYHFHWTCJBSDZZTFDMXHCNJZYMQWSRYJDZJQPDQBBSTJGGFBKJBXTGQHNGWJXJGDLLTHZHHYYYYYYSXWTYYYCCBDBPYPZYCCZYJPZYWCBDLFWZCWJDXXHYHLHWZZXJTCZLCDPXUJCZZZLYXJJTXPHFXWPYWXZPTDZZBDZCYHJHMLXBQXSBYLRDTGJRRCTTTHYTCZWMXFYTWWZCWJWXJYWCSKYBZSCCTZQNHXNWXXKHKFHTSWOCCJYBCMPZZYKBNNZPBZHHZDLSYDDYTYFJPXYNGFXBYQXCBHXCPSXTYZDMKYSNXSXLHKMZXLYHDHKWHXXSSKQYHHCJYXGLHZXCSNHEKDTGZXQYPKDHEXTYKCNYMYYYPKQYYYKXZLTHJQTBYQHXBMYHSQCKWWYLLHCYYLNNEQXQWMCFBDCCMLJGGXDQKTLXKGNQCDGZJWYJJLYHHQTTTNWCHMXCXWHWSZJYDJCCDBQCDGDNYXZTHCQRXCBHZTQCBXWGQWYYBXHMBYMYQTYEXMQKYAQYRGYZSLFYKKQHYSSQYSHJGJCNXKZYCXSBXYXHYYLSTYCXQTHYSMGSCPMMGCCCCCMTZTASMGQZJHKLOSQYLSWTMXSYQKDZLJQQYPLSYCZTCQQPBBQJZCLPKHQZYYXXDTDDTSJCXFFLLCHQXMJLWCJCXTSPYCXNDTJSHJWXDQQJSKXYAMYLSJHMLALYKXCYYDMNMDQMXMCZNNCYBZKKYFLMCHCMLHXRCJJHSYLNMTJZGZGYWJXSRXCWJGJQHQZDQJDCJJZKJKGDZQGJJYJYLXZXXCDQHHHEYTMHLFSBDJSYYSHFYSTCZQLPBDRFRZTZYKYWHSZYQKWDQZRKMSYNBCRXQBJYFAZPZZEDZCJYWBCJWHYJBQSZYWRYSZPTDKZPFPBNZTKLQYHBBZPNPPTYZZYBQNYDCPJMMCYCQMCYFZZDCMNLFPBPLNGQJTBTTNJZPZBBZNJKLJQYLNBZQHKSJZNGGQSZZKYXSHPZSNBCGZKDDZQANZHJKDRTLZLSWJLJZLYWTJNDJZJHXYAYNCBGTZCSSQMNJPJYTYSWXZFKWJQTKHTZPLBHSNJZSYZBWZZZZLSYLSBJHDWWQPSLMMFBJDWAQYZTCJTBNNWZXQXCDSLQGDSDPDZHJTQQPSWLYYJZLGYXYZLCTCBJTKTYCZJTQKBSJLGMGZDMCSGPYNJZYQYYKNXRPWSZXMTNCSZZYXYBYHYZAXYWQCJTLLCKJJTJHGDXDXYQYZZBYWDLWQCGLZGJGQRQZCZSSBCRPCSKYDZNXJSQGXSSJMYDNSTZTPBDLTKZWXQWQTZEXNQCZGWEZKSSBYBRTSSSLCCGBPSZQSZLCCGLLLZXHZQTHCZMQGYZQZNMCOCSZJMMZSQPJYGQLJYJPPLDXRGZYXCCSXHSHGTZNLZWZKJCXTCFCJXLBMQBCZZWPQDNHXLJCTHYZLGYLNLSZZPCXDSCQQHJQKSXZPBAJYEMSMJTZDXLCJYRYYNWJBNGZZTMJXLTBSLYRZPYLSSCNXPHLLHYLLQQZQLXYMRSYCXZLMMCZLTZSDWTJJLLNZGGQXPFSKYGYGHBFZPDKMWGHCXMSGDXJMCJZDYCABXJDLNBCDQYGSKYDQTXDJJYXMSZQAZDZFSLQXYJSJZYLBTXXWXQQZBJZUFBBLYLWDSLJHXJYZJWTDJCZFQZQZZDZSXZZQLZCDZFJHYSPYMPQZMLPPLFFXJJNZZYLSJEYQZFPFZKSYWJJJHRDJZZXTXXGLGHYDXCSKYSWMMZCWYBAZBJKSHFHJCXMHFQHYXXYZFTSJYZFXYXPZLCHMZMBXHZZSXYFYMNCWDABAZLXKTCSHHXKXJJZJSTHYGXSXYYHHHJWXKZXSSBZZWHHHCWTZZZPJXSNXQQJGZYZYWLLCWXZFXXYXYHXMKYYSWSQMNLNAYCYSPMJKHWCQHYLAJJMZXHMMCNZHBHXCLXTJPLTXYJHDYYLTTXFSZHYXXSJBJYAYRSMXYPLCKDUYHLXRLNLLSTYZYYQYGYHHSCCSMZCTZQXKYQFPYYRPFFLKQUNTSZLLZMWWTCQQYZWTLLMLMPWMBZSSTZRBPDDTLQJJBXZCSRZQQYGWCSXFWZLXCCRSZDZMCYGGDZQSGTJSWLJMYMMZYHFBJDGYXCCPSHXNZCSBSJYJGJMPPWAFFYFNXHYZXZYLREMZGZCYZSSZDLLJCSQFNXZKPTXZGXJJGFMYYYSNBTYLBNLHPFZDCYFBMGQRRSSSZXYSGTZRNYDZZCDGPJAFJFZKNZBLCZSZPSGCYCJSZLMLRSZBZZLDLSLLYSXSQZQLYXZLSKKBRXBRBZCYCXZZZEEYFGKLZLYYHGZSGZLFJHGTGWKRAAJYZKZQTSSHJJXDCYZUYJLZYRZDQQHGJZXSSZBYKJPBFRTJXLLFQWJHYLQTYMBLPZDXTZYGBDHZZRBGXHWNJTJXLKSCFSMWLSDQYSJTXKZSCFWJLBXFTZLLJZLLQBLSQMQQCGCZFPBPHZCZJLPYYGGDTGWDCFCZQYYYQYSSCLXZSKLZZZGFFCQNWGLHQYZJJCZLQZZYJPJZZBPDCCMHJGXDQDGDLZQMFGPSYTSDYFWWDJZJYSXYYCZCYHZWPBYKXRYLYBHKJKSFXTZJMMCKHLLTNYYMSYXYZPYJQYCSYCWMTJJKQYRHLLQXPSGTLYYCLJSCPXJYZFNMLRGJJTYZBXYZMSJYJHHFZQMSYXRSZCWTLRTQZSSTKXGQKGSPTGCZNJSJCQCXHMXGGZTQYDJKZDLBZSXJLHYQGGGTHQSZPYHJHHGYYGKGGCWJZZYLCZLXQSFTGZSLLLMLJSKCTBLLZZSZMMNYTPZSXQHJCJYQXYZXZQZCPSHKZZYSXCDFGMWQRLLQXRFZTLYSTCTMJCXJJXHJNXTNRZTZFQYHQGLLGCXSZSJDJLJCYDSJTLNYXHSZXCGJZYQPYLFHDJSBPCCZHJJJQZJQDYBSSLLCMYTTMQTBHJQNNYGKYRQYQMZGCJKPDCGMYZHQLLSLLCLMHOLZGDYYFZSLJCQZLYLZQJESHNYLLJXGJXLYSYYYXNBZLJSSZCQQCJYLLZLTJYLLZLLBNYLGQCHXYYXOXCXQKYJXXXYKLXSXXYQXCYKQXQCSGYXXYQXYGYTQOHXHXPYXXXULCYEYCHZZCBWQBBWJQZSCSZSSLZYLKDESJZWMYMCYTSDSXXSCJPQQSQYLYYZYCMDJDZYWCBTJSYDJKCYDDJLBDJJSODZYSYXQQYXDHHGQQYQHDYXWGMMMAJDYBBBPPBCMUUPLJZSMTXERXJMHQNUTPJDCBSSMSSSTKJTSSMMTRCPLZSZMLQDSDMJMQPNQDXCFYNBFSDQXYXHYAYKQYDDLQYYYSSZBYDSLNTFQTZQPZMCHDHCZCWFDXTMYQSPHQYYXSRGJCWTJTZZQMGWJJTJHTQJBBHWZPXXHYQFXXQYWYYHYSCDYDHHQMNMTMWCPBSZPPZZGLMZFOLLCFWHMMSJZTTDHZZYFFYTZZGZYSKYJXQYJZQBHMBZZLYGHGFMSHPZFZSNCLPBQSNJXZSLXXFPMTYJYGBXLLDLXPZJYZJYHHZCYWHJYLSJEXFSZZYWXKZJLUYDTMLYMQJPWXYHXSKTQJEZRPXXZHHMHWQPWQLYJJQJJZSZCPHJLCHHNXJLQWZJHBMZYXBDHHYPZLHLHLGFWLCHYYTLHJXCJMSCPXSTKPNHQXSRTYXXTESYJCTLSSLSTDLLLWWYHDHRJZSFGXTSYCZYNYHTDHWJSLHTZDQDJZXXQHGYLTZPHCSQFCLNJTCLZPFSTPDYNYLGMJLLYCQHYSSHCHYLHQYQTMZYPBYWRFQYKQSYSLZDQJMPXYYSSRHZJNYWTQDFZBWWTWWRXCWHGYHXMKMYYYQMSMZHNGCEPMLQQMTCWCTMMPXJPJJHFXYYZSXZHTYBMSTSYJTTQQQYYLHYNPYQZLCYZHZWSMYLKFJXLWGXYPJYTYSYXYMZCKTTWLKSMZSYLMPWLZWXWQZSSAQSYXYRHSSNTSRAPXCPWCMGDXHXZDZYFJHGZTTSBJHGYZSZYSMYCLLLXBTYXHBBZJKSSDMALXHYCFYGMQYPJYCQXJLLLJGSLZGQLYCJCCZOTYXMTMTTLLWTGPXYMZMKLPSZZZXHKQYSXCTYJZYHXSHYXZKXLZWPSQPYHJWPJPWXQQYLXSDHMRSLZZYZWTTCYXYSZZSHBSCCSTPLWSSCJCHNLCGCHSSPHYLHFHHXJSXYLLNYLSZDHZXYLSXLWZYKCLDYAXZCMDDYSPJTQJZLNWQPSSSWCTSTSZLBLNXSMNYYMJQBQHRZWTYYDCHQLXKPZWBGQYBKFCMZWPZLLYYLSZYDWHXPSBCMLJBSCGBHXLQHYRLJXYSWXWXZSLDFHLSLYNJLZYFLYJYCDRJLFSYZFSLLCQYQFGJYHYXZLYLMSTDJCYHBZLLNWLXXYGYYHSMGDHXXHHLZZJZXCZZZCYQZFNGWPYLCPKPYYPMCLQKDGXZGGWQBDXZZKZFBXXLZXJTPJPTTBYTSZZDWSLCHZHSLTYXHQLHYXXXYYZYSWTXZKHLXZXZPYHGCHKCFSYHUTJRLXFJXPTZTWHPLYXFCRHXSHXKYXXYHZQDXQWULHYHMJTBFLKHTXCWHJFWJCFPQRYQXCYYYQYGRPYWSGSUNGWCHKZDXYFLXXHJJBYZWTSXXNCYJJYMSWZJQRMHXZWFQSYLZJZGBHYNSLBGTTCSYBYXXWXYHXYYXNSQYXMQYWRGYQLXBBZLJSYLPSYTJZYHYZAWLRORJMKSCZJXXXYXCHDYXRYXXJDTSQFXLYLTSFFYXLMTYJMJUYYYXLTZCSXQZQHZXLYYXZHDNBRXXXJCTYHLBRLMBRLLAXKYLLLJLYXXLYCRYLCJTGJCMTLZLLCYZZPZPCYAWHJJFYBDYYZSMPCKZDQYQPBPCJPDCYZMDPBCYYDYCNNPLMTMLRMFMMGWYZBSJGYGSMZQQQZTXMKQWGXLLPJGZBQCDJJJFPKJKCXBLJMSWMDTQJXLDLPPBXCWRCQFBFQJCZAHZGMYKPHYYHZYKNDKZMBPJYXPXYHLFPNYYGXJDBKXNXHJMZJXSTRSTLDXSKZYSYBZXJLXYSLBZYSLHXJPFXPQNBYLLJQKYGZMCYZZYMCCSLCLHZFWFWYXZMWSXTYNXJHPYYMCYSPMHYSMYDYSHQYZCHMJJMZCAAGCFJBBHPLYZYLXXSDJGXDHKXXTXXNBHRMLYJSLTXMRHNLXQJXYZLLYSWQGDLBJHDCGJYQYCMHWFMJYBMBYJYJWYMDPWHXQLDYGPDFXXBCGJSPCKRSSYZJMSLBZZJFLJJJLGXZGYXYXLSZQYXBEXYXHGCXBPLDYHWETTWWCJMBTXCHXYQXLLXFLYXLLJLSSFWDPZSMYJCLMWYTCZPCHQEKCQBWLCQYDPLQPPQZQFJQDJHYMMCXTXDRMJWRHXCJZYLQXDYYNHYYHRSLSRSYWWZJYMTLTLLGTQCJZYABTCKZCJYCCQLJZQXALMZYHYWLWDXZXQDLLQSHGPJFJLJHJABCQZDJGTKHSSTCYJLPSWZLXZXRWGLDLZRLZXTGSLLLLZLYXXWGDZYGBDPHZPBRLWSXQBPFDWOFMWHLYPCBJCCLDMBZPBZZLCYQXLDOMZBLZWPDWYYGDSTTHCSQSCCRSSSYSLFYBFNTYJSZDFNDPDHDZZMBBLSLCMYFFGTJJQWFTMTPJWFNLBZCMMJTGBDZLQLPYFHYYMJYLSDCHDZJWJCCTLJCLDTLJJCPDDSQDSSZYBNDBJLGGJZXSXNLYCYBJXQYCBYLZCFZPPGKCXZDZFZTJJFJSJXZBNZYJQTTYJYHTYCZHYMDJXTTMPXSPLZCDWSLSHXYPZGTFMLCJTYCBPMGDKWYCYZCDSZZYHFLYCTYGWHKJYYLSJCXGYWJCBLLCSNDDBTZBSCLYZCZZSSQDLLMQYYHFSLQLLXFTYHABXGWNYWYYPLLSDLDLLBJCYXJZMLHLJDXYYQYTDLLLBUGBFDFBBQJZZMDPJHGCLGMJJPGAEHHBWCQXAXHHHZCHXYPHJAXHLPHJPGPZJQCQZGJJZZUZDMQYYBZZPHYHYBWHAZYJHYKFGDPFQSDLZMLJXKXGALXZDAGLMDGXMWZQYXXDXXPFDMMSSYMPFMDMMKXKSYZYSHDZKXSYSMMZZZMSYDNZZCZXFPLSTMZDNMXCKJMZTYYMZMZZMSXHHDCZJEMXXKLJSTLWLSQLYJZLLZJSSDPPMHNLZJCZYHMXXHGZCJMDHXTKGRMXFWMCGMWKDTKSXQMMMFZZYDKMSCLCMPCGMHSPXQPZDSSLCXKYXTWLWJYAHZJGZQMCSNXYYMMPMLKJXMHLMLQMXCTKZMJQYSZJSYSZHSYJZJCDAJZYBSDQJZGWZQQXFKDMSDJLFWEHKZQKJPEYPZYSZCDWYJFFMZZYLTTDZZEFMZLBNPPLPLPEPSZALLTYLKCKQZKGENQLWAGYXYDPXLHSXQQWQCQXQCLHYXXMLYCCWLYMQYSKGCHLCJNSZKPYZKCQZQLJPDMDZHLASXLBYDWQLWDNBQCRYDDZTJYBKBWSZDXDTNPJDTCTQDFXQQMGNXECLTTBKPWSLCTYQLPWYZZKLPYGZCQQPLLKCCYLPQMZCZQCLJSLQZDJXLDDHPZQDLJJXZQDXYZQKZLJCYQDYJPPYPQYKJYRMPCBYMCXKLLZLLFQPYLLLMBSGLCYSSLRSYSQTMXYXZQZFDZUYSYZTFFMZZSMZQHZSSCCMLYXWTPZGXZJGZGSJSGKDDHTQGGZLLBJDZLCBCHYXYZHZFYWXYZYMSDBZZYJGTSMTFXQYXQSTDGSLNXDLRYZZLRYYLXQHTXSRTZNGZXBNQQZFMYKMZJBZYMKBPNLYZPBLMCNQYZZZSJZHJCTZKHYZZJRDYZHNPXGLFZTLKGJTCTSSYLLGZRZBBQZZKLPKLCZYSSUYXBJFPNJZZXCDWXZYJXZZDJJKGGRSRJKMSMZJLSJYWQSKYHQJSXPJZZZLSNSHRNYPZTWCHKLPSRZLZXYJQXQKYSJYCZTLQZYBBYBWZPQDWWYZCYTJCJXCKCWDKKZXSGKDZXWWYYJQYYTCYTDLLXWKCZKKLCCLZCQQDZLQLCSFQCHQHSFSMQZZLNBJJZBSJHTSZDYSJQJPDLZCDCWJKJZZLPYCGMZWDJJBSJQZSYZYHHXJPBJYDSSXDZNCGLQMBTSFSBPDZDLZNFGFJGFSMPXJQLMBLGQCYYXBQKDJJQYRFKZTJDHCZKLBSDZCFJTPLLJGXHYXZCSSZZXSTJYGKGCKGYOQXJPLZPBPGTGYJZGHZQZZLBJLSQFZGKQQJZGYCZBZQTLDXRJXBSXXPZXHYZYCLWDXJJHXMFDZPFZHQHQMQGKSLYHTYCGFRZGNQXCLPDLBZCSCZQLLJBLHBZCYPZZPPDYMZZSGYHCKCPZJGSLJLNSCDSLDLXBMSTLDDFJMKDJDHZLZXLSZQPQPGJLLYBDSZGQLBZLSLKYYHZTTNTJYQTZZPSZQZTLLJTYYLLQLLQYZQLBDZLSLYYZYMDFSZSNHLXZNCZQZPBWSKRFBSYZMTHBLGJPMCZZLSTLXSHTCSYZLZBLFEQHLXFLCJLYLJQCBZLZJHHSSTBRMHXZHJZCLXFNBGXGTQJCZTMSFZKJMSSNXLJKBHSJXNTNLZDNTLMSJXGZJYJCZXYJYJWRWWQNZTNFJSZPZSHZJFYRDJSFSZJZBJFZQZZHZLXFYSBZQLZSGYFTZDCSZXZJBQMSZKJRHYJZCKMJKHCHGTXKXQGLXPXFXTRTYLXJXHDTSJXHJZJXZWZLCQSBTXWXGXTXXHXFTSDKFJHZYJFJXRZSDLLLTQSQQZQWZXSYQTWGWBZCGZLLYZBCLMQQTZHZXZXLJFRMYZFLXYSQXXJKXRMQDZDMMYYBSQBHGZMWFWXGMXLZPYYTGZYCCDXYZXYWGSYJYZNBHPZJSQSYXSXRTFYZGRHZTXSZZTHCBFCLSYXZLZQMZLMPLMXZJXSFLBYZMYQHXJSXRXSQZZZSSLYFRCZJRCRXHHZXQYDYHXSJJHZCXZBTYNSYSXJBQLPXZQPYMLXZKYXLXCJLCYSXXZZLXDLLLJJYHZXGYJWKJRWYHCPSGNRZLFZWFZZNSXGXFLZSXZZZBFCSYJDBRJKRDHHGXJLJJTGXJXXSTJTJXLYXQFCSGSWMSBCTLQZZWLZZKXJMLTMJYHSDDBXGZHDLBMYJFRZFSGCLYJBPMLYSMSXLSZJQQHJZFXGFQFQBPXZGYYQXGZTCQWYLTLGWSGWHRLFSFGZJMGMGBGTJFSYZZGZYZAFLSSPMLPFLCWBJZCLJJMZLPJJLYMQDMYYYFBGYGYZMLYZDXQYXRQQQHSYYYQXYLJTYXFSFSLLGNQCYHYCWFHCCCFXPYLYPLLZYXXXXXKQHHXSHJZCFZSCZJXCPZWHHHHHAPYLQALPQAFYHXDYLUKMZQGGGDDESRNNZLTZGCHYPPYSQJJHCLLJTOLNJPZLJLHYMHEYDYDSQYCDDHGZUNDZCLZYZLLZNTNYZGSLHSLPJJBDGWXPCDUTJCKLKCLWKLLCASSTKZZDNQNTTLYYZSSYSSZZRYLJQKCQDHHCRXRZYDGRGCWCGZQFFFPPJFZYNAKRGYWYQPQXXFKJTSZZXSWZDDFBBXTBGTZKZNPZZPZXZPJSZBMQHKCYXYLDKLJNYPKYGHGDZJXXEAHPNZKZTZCMXCXMMJXNKSZQNMNLWBWWXJKYHCPSTMCSQTZJYXTPCTPDTNNPGLLLZSJLSPBLPLQHDTNJNLYYRSZFFJFQWDPHZDWMRZCCLODAXNSSNYZRESTYJWJYJDBCFXNMWTTBYLWSTSZGYBLJPXGLBOCLHPCBJLTMXZLJYLZXCLTPNCLCKXTPZJSWCYXSFYSZDKNTLBYJCYJLLSTGQCBXRYZXBXKLYLHZLQZLNZCXWJZLJZJNCJHXMNZZGJZZXTZJXYCYYCXXJYYXJJXSSSJSTSSTTPPGQTCSXWZDCSYFPTFBFHFBBLZJCLZZDBXGCXLQPXKFZFLSYLTUWBMQJHSZBMDDBCYSCCLDXYCDDQLYJJWMQLLCSGLJJSYFPYYCCYLTJANTJJPWYCMMGQYYSXDXQMZHSZXPFTWWZQSWQRFKJLZJQQYFBRXJHHFWJJZYQAZMYFRHCYYBYQWLPEXCCZSTYRLTTDMQLYKMBBGMYYJPRKZNPBSXYXBHYZDJDNGHPMFSGMWFZMFQMMBCMZZCJJLCNUXYQLMLRYGQZCYXZLWJGCJCGGMCJNFYZZJHYCPRRCMTZQZXHFQGTJXCCJEAQCRJYHPLQLSZDJRBCQHQDYRHYLYXJSYMHZYDWLDFRYHBPYDTSSCNWBXGLPZMLZZTQSSCPJMXXYCSJYTYCGHYCJWYRXXLFEMWJNMKLLSWTXHYYYNCMMCWJDQDJZGLLJWJRKHPZGGFLCCSCZMCBLTBHBQJXQDSPDJZZGKGLFQYWBZYZJLTSTDHQHCTCBCHFLQMPWDSHYYTQWCNZZJTLBYMBPDYYYXSQKXWYYFLXXNCWCXYPMAELYKKJMZZZBRXYYQJFLJPFHHHYTZZXSGQQMHSPGDZQWBWPJHZJDYSCQWZKTXXSQLZYYMYSDZGRXCKKUJLWPYSYSCSYZLRMLQSYLJXBCXTLWDQZPCYCYKPPPNSXFYZJJRCEMHSZMSXLXGLRWGCSTLRSXBZGBZGZTCPLUJLSLYLYMTXMTZPALZXPXJTJWTCYYZLBLXBZLQMYLXPGHDSLSSDMXMBDZZSXWHAMLCZCPJMCNHJYSNSYGCHSKQMZZQDLLKABLWJXSFMOCDXJRRLYQZKJMYBYQLYHETFJZFRFKSRYXFJTWDSXXSYSQJYSLYXWJHSNLXYYXHBHAWHHJZXWMYLJCSSLKYDZTXBZSYFDXGXZJKHSXXYBSSXDPYNZWRPTQZCZENYGCXQFJYKJBZMLJCMQQXUOXSLYXXLYLLJDZBTYMHPFSTTQQWLHOKYBLZZALZXQLHZWRRQHLSTMYPYXJJXMQSJFNBXYXYJXXYQYLTHYLQYFMLKLJTMLLHSZWKZHLJMLHLJKLJSTLQXYLMBHHLNLZXQJHXCFXXLHYHJJGBYZZKBXSCQDJQDSUJZYYHZHHMGSXCSYMXFEBCQWWRBPYYJQTYZCYQYQQZYHMWFFHGZFRJFCDPXNTQYZPDYKHJLFRZXPPXZDBBGZQSTLGDGYLCQMLCHHMFYWLZYXKJLYPQHSYWMQQGQZMLZJNSQXJQSYJYCBEHSXFSZPXZWFLLBCYYJDYTDTHWZSFJMQQYJLMQXXLLDTTKHHYBFPWTYYSQQWNQWLGWDEBZWCMYGCULKJXTMXMYJSXHYBRWFYMWFRXYQMXYSZTZZTFYKMLDHQDXWYYNLCRYJBLPSXCXYWLSPRRJWXHQYPHTYDNXHHMMYWYTZCSQMTSSCCDALWZTCPQPYJLLQZYJSWXMZZMMYLMXCLMXCZMXMZSQTZPPQQBLPGXQZHFLJJHYTJSRXWZXSCCDLXTYJDCQJXSLQYCLZXLZZXMXQRJMHRHZJBHMFLJLMLCLQNLDXZLLLPYPSYJYSXCQQDCMQJZZXHNPNXZMEKMXHYKYQLXSXTXJYYHWDCWDZHQYYBGYBCYSCFGPSJNZDYZZJZXRZRQJJYMCANYRJTLDPPYZBSTJKXXZYPFDWFGZZRPYMTNGXZQBYXNBUFNQKRJQZMJEGRZGYCLKXZDSKKNSXKCLJSPJYYZLQQJYBZSSQLLLKJXTBKTYLCCDDBLSPPFYLGYDTZJYQGGKQTTFZXBDKTYYHYBBFYTYYBCLPDYTGDHRYRNJSPTCSNYJQHKLLLZSLYDXXWBCJQSPXBPJZJCJDZFFXXBRMLAZHCSNDLBJDSZBLPRZTSWSBXBCLLXXLZDJZSJPYLYXXYFTFFFBHJJXGBYXJPMMMPSSJZJMTLYZJXSWXTYLEDQPJMYGQZJGDJLQJWJQLLSJGJGYGMSCLJJXDTYGJQJQJCJZCJGDZZSXQGSJGGCXHQXSNQLZZBXHSGZXCXYLJXYXYYDFQQJHJFXDHCTXJYRXYSQTJXYEFYYSSYYJXNCYZXFXMSYSZXYYSCHSHXZZZGZZZGFJDLTYLNPZGYJYZYYQZPBXQBDZTZCZYXXYHHSQXSHDHGQHJHGYWSZTMZMLHYXGEBTYLZKQWYTJZRCLEKYSTDBCYKQQSAYXCJXWWGSBHJYZYDHCSJKQCXSWXFLTYNYZPZCCZJQTZWJQDZZZQZLJJXLSBHPYXXPSXSHHEZTXFPTLQYZZXHYTXNCFZYYHXGNXMYWXTZSJPTHHGYMXMXQZXTSBCZYJYXXTYYZYPCQLMMSZMJZZLLZXGXZAAJZYXJMZXWDXZSXZDZXLEYJJZQBHZWZZZQTZPSXZTDSXJJJZNYAZPHXYYSRNQDTHZHYYKYJHDZXZLSWCLYBZYECWCYCRYLCXNHZYDZYDYJDFRJJHTRSQTXYXJRJHOJYNXELXSFSFJZGHPZSXZSZDZCQZBYYKLSGSJHCZSHDGQGXYZGXCHXZJWYQWGYHKSSEQZZNDZFKWYSSTCLZSTSYMCDHJXXYWEYXCZAYDMPXMDSXYBSQMJMZJMTZQLPJYQZCGQHXJHHLXXHLHDLDJQCLDWBSXFZZYYSCHTYTYYBHECXHYKGJPXHHYZJFXHWHBDZFYZBCAPNPGNYDMSXHMMMMAMYNBYJTMPXYYMCTHJBZYFCGTYHWPHFTWZZEZSBZEGPFMTSKFTYCMHFLLHGPZJXZJGZJYXZSBBQSCZZLZCCSTPGXMJSFTCCZJZDJXCYBZLFCJSYZFGSZLYBCWZZBYZDZYPSWYJZXZBDSYUXLZZBZFYGCZXBZHZFTPBGZGEJBSTGKDMFHYZZJHZLLZZGJQZLSFDJSSCBZGPDLFZFZSZYZYZSYGCXSNXXCHCZXTZZLJFZGQSQYXZJQDCCZTQCDXZJYQJQCHXZTDLGSCXZSYQJQTZWLQDQZTQCHQQJZYEZZZPBWKDJFCJPZTYPQYQTTYNLMBDKTJZPQZQZZFPZSBNJLGYJDXJDZZKZGQKXDLPZJTCJDQBXDJQJSTCKNXBXZMSLYJCQMTJQWWCJQNJNLLLHJCWQTBZQYDZCZPZZDZYDDCYZZZCCJTTJFZDPRRTZTJDCQTQZDTJNPLZBCLLCTZSXKJZQZPZLBZRBTJDCXFCZDBCCJJLTQQPLDCGZDBBZJCQDCJWYNLLZYZCCDWLLXWZLXRXNTQQCZXKQLSGDFQTDDGLRLAJJTKUYMKQLLTZYTDYYCZGJWYXDXFRSKSTQTENQMRKQZHHQKDLDAZFKYPBGGPZREBZZYKZZSPEGJXGYKQZZZSLYSYYYZWFQZYLZZLZHWCHKYPQGNPGBLPLRRJYXCCSYYHSFZFYBZYYTGZXYLXCZWXXZJZBLFFLGSKHYJZEYJHLPLLLLCZGXDRZELRHGKLZZYHZLYQSZZJZQLJZFLNBHGWLCZCFJYSPYXZLZLXGCCPZBLLCYBBBBUBBCBPCRNNZCZYRBFSRLDCGQYYQXYGMQZWTZYTYJXYFWTEHZZJYWLCCNTZYJJZDEDPZDZTSYQJHDYMBJNYJZLXTSSTPHNDJXXBYXQTZQDDTJTDYYTGWSCSZQFLSHLGLBCZPHDLYZJYCKWTYTYLBNYTSDSYCCTYSZYYEBHEXHQDTWNYGYCLXTSZYSTQMYGZAZCCSZZDSLZCLZRQXYYELJSBYMXSXZTEMBBLLYYLLYTDQYSHYMRQWKFKBFXNXSBYCHXBWJYHTQBPBSBWDZYLKGZSKYHXQZJXHXJXGNLJKZLYYCDXLFYFGHLJGJYBXQLYBXQPQGZTZPLNCYPXDJYQYDYMRBESJYYHKXXSTMXRCZZYWXYQYBMCLLYZHQYZWQXDBXBZWZMSLPDMYSKFMZKLZCYQYCZLQXFZZYDQZPZYGYJYZMZXDZFYFYTTQTZHGSPCZMLCCYTZXJCYTJMKSLPZHYSNZLLYTPZCTZZCKTXDHXXTQCYFKSMQCCYYAZHTJPCYLZLYJBJXTPNYLJYYNRXSYLMMNXJSMYBCSYSYLZYLXJJQYLDZLPQBFZZBLFNDXQKCZFYWHGQMRDSXYCYTXNQQJZYYPFZXDYZFPRXEJDGYQBXRCNFYYQPGHYJDYZXGRHTKYLNWDZNTSMPKLBTHBPYSZBZTJZSZZJTYYXZPHSSZZBZCZPTQFZMYFLYPYBBJQXZMXXDJMTSYSKKBJZXHJCKLPSMKYJZCXTMLJYXRZZQSLXXQPYZXMKYXXXJCLJPRMYYGADYSKQLSNDHYZKQXZYZTCGHZTLMLWZYBWSYCTBHJHJFCWZTXWYTKZLXQSHLYJZJXTMPLPYCGLTBZZTLZJCYJGDTCLKLPLLQPJMZPAPXYZLKKTKDZCZZBNZDYDYQZJYJGMCTXLTGXSZLMLHBGLKFWNWZHDXUHLFMKYSLGXDTWWFRJEJZTZHYDXYKSHWFZCQSHKTMQQHTZHYMJDJSKHXZJZBZZXYMPAGQMSTPXLSKLZYNWRTSQLSZBPSPSGZWYHTLKSSSWHZZLYYTNXJGMJSZSUFWNLSOZTXGXLSAMMLBWLDSZYLAKQCQCTMYCFJBSLXCLZZCLXXKSBZQCLHJPSQPLSXXCKSLNHPSFQQYTXYJZLQLDXZQJZDYYDJNZPTUZDSKJFSLJHYLZSQZLBTXYDGTQFDBYAZXDZHZJNHHQBYKNXJJQCZMLLJZKSPLDYCLBBLXKLELXJLBQYCXJXGCNLCQPLZLZYJTZLJGYZDZPLTQCSXFDMNYCXGBTJDCZNBGBQYQJWGKFHTNPYQZQGBKPBBYZMTJDYTBLSQMPSXTBNPDXKLEMYYCJYNZCTLDYKZZXDDXHQSHDGMZSJYCCTAYRZLPYLTLKXSLZCGGEXCLFXLKJRTLQJAQZNCMBYDKKCXGLCZJZXJHPTDJJMZQYKQSECQZDSHHADMLZFMMZBGNTJNNLGBYJBRBTMLBYJDZXLCJLPLDLPCQDHLXZLYCBLCXZZJADJLNZMMSSSMYBHBSQKBHRSXXJMXSDZNZPXLGBRHWGGFCXGMSKLLTSJYYCQLTSKYWYYHYWXBXQYWPYWYKQLSQPTNTKHQCWDQKTWPXXHCPTHTWUMSSYHBWCRWXHJMKMZNGWTMLKFGHKJYLSYYCXWHYECLQHKQHTTQKHFZLDXQWYZYYDESBPKYRZPJFYYZJCEQDZZDLATZBBFJLLCXDLMJSSXEGYGSJQXCWBXSSZPDYZCXDNYXPPZYDLYJCZPLTXLSXYZYRXCYYYDYLWWNZSAHJSYQYHGYWWAXTJZDAXYSRLTDPSSYYFNEJDXYZHLXLLLZQZSJNYQYQQXYJGHZGZCYJCHZLYCDSHWSHJZYJXCLLNXZJJYYXNFXMWFPYLCYLLABWDDHWDXJMCXZTZPMLQZHSFHZYNZTLLDYWLSLXHYMMYLMBWWKYXYADTXYLLDJPYBPWUXJMWMLLSAFDLLYFLBHHHBQQLTZJCQJLDJTFFKMMMBYTHYGDCQRDDWRQJXNBYSNWZDBYYTBJHPYBYTTJXAAHGQDQTMYSTQXKBTZPKJLZRBEQQSSMJJBDJOTGTBXPGBKTLHQXJJJCTHXQDWJLWRFWQGWSHCKRYSWGFTGYGBXSDWDWRFHWYTJJXXXJYZYSLPYYYPAYXHYDQKXSHXYXGSKQHYWFDDDPPLCJLQQEEWXKSYYKDYPLTJTHKJLTCYYHHJTTPLTZZCDLTHQKZXQYSTEEYWYYZYXXYYSTTJKLLPZMCYHQGXYHSRMBXPLLNQYDQHXSXXWGDQBSHYLLPJJJTHYJKYPPTHYYKTYEZYENMDSHLCRPQFDGFXZPSFTLJXXJBSWYYSKSFLXLPPLBBBLBSFXFYZBSJSSYLPBBFFFFSSCJDSTZSXZRYYSYFFSYZYZBJTBCTSBSDHRTJJBYTCXYJEYLXCBNEBJDSYXYKGSJZBXBYTFZWGENYHHTHZHHXFWGCSTBGXKLSXYWMTMBYXJSTZSCDYQRCYTWXZFHMYMCXLZNSDJTTTXRYCFYJSBSDYERXJLJXBBDEYNJGHXGCKGSCYMBLXJMSZNSKGXFBNBPTHFJAAFXYXFPXMYPQDTZCXZZPXRSYWZDLYBBKTYQPQJPZYPZJZNJPZJLZZFYSBTTSLMPTZRTDXQSJEHBZYLZDHLJSQMLHTXTJECXSLZZSPKTLZKQQYFSYGYWPCPQFHQHYTQXZKRSGTTSQCZLPTXCDYYZXSQZSLXLZMYCPCQBZYXHBSXLZDLTCDXTYLZJYYZPZYZLTXJSJXHLPMYTXCQRBLZSSFJZZTNJYTXMYJHLHPPLCYXQJQQKZZSCPZKSWALQSBLCCZJSXGWWWYGYKTJBBZTDKHXHKGTGPBKQYSLPXPJCKBMLLXDZSTBKLGGQKQLSBKKTFXRMDKBFTPZFRTBBRFERQGXYJPZSSTLBZTPSZQZSJDHLJQLZBPMSMMSXLQQNHKNBLRDDNXXDHDDJCYYGYLXGZLXSYGMQQGKHBPMXYXLYTQWLWGCPBMQXCYZYDRJBHTDJYHQSHTMJSBYPLWHLZFFNYPMHXXHPLTBQPFBJWQDBYGPNZTPFZJGSDDTQSHZEAWZZYLLTYYBWJKXXGHLFKXDJTMSZSQYNZGGSWQSPHTLSSKMCLZXYSZQZXNCJDQGZDLFNYKLJCJLLZLMZZNHYDSSHTHZZLZZBBHQZWWYCRZHLYQQJBEYFXXXWHSRXWQHWPSLMSSKZTTYGYQQWRSLALHMJTQJSMXQBJJZJXZYZKXBYQXBJXSHZTSFJLXMXZXFGHKZSZGGYLCLSARJYHSLLLMZXELGLXYDJYTLFBHBPNLYZFBBHPTGJKWETZHKJJXZXXGLLJLSTGSHJJYQLQZFKCGNNDJSSZFDBCTWWSEQFHQJBSAQTGYPQLBXBMMYWXGSLZHGLZGQYFLZBYFZJFRYSFMBYZHQGFWZSYFYJJPHZBYYZFFWODGRLMFTWLBZGYCQXCDJYGZYYYYTYTYDWEGAZYHXJLZYYHLRMGRXXZCLHNELJJTJTPWJYBJJBXJJTJTEEKHWSLJPLPSFYZPQQBDLQJJTYYQLYZKDKSQJYYQZLDQTGJQYZJSUCMRYQTHTEJMFCTYHYPKMHYZWJDQFHYYXWSHCTXRLJHQXHCCYYYJLTKTTYTMXGTCJTZAYYOCZLYLBSZYWJYTSJYHBYSHFJLYGJXXTMZYYLTXXYPZLXYJZYZYYPNHMYMDYYLBLHLSYYQQLLNJJYMSOYQBZGDLYXYLCQYXTSZEGXHZGLHWBLJHEYXTWQMAKBPQCGYSHHEGQCMWYYWLJYJHYYZLLJJYLHZYHMGSLJLJXCJJYCLYCJPCPZJZJMMYLCQLNQLJQJSXYJMLSZLJQLYCMMHCFMMFPQQMFYLQMCFFQMMMMHMZNFHHJGTTHHKHSLNCHHYQDXTMMQDCYZYXYQMYQYLTDCYYYZAZZCYMZYDLZFFFMMYCQZWZZMABTBYZTDMNZZGGDFTYPCGQYTTSSFFWFDTZQSSYSTWXJHXYTSXXYLBYQHWWKXHZXWZNNZZJZJJQJCCCHYYXBZXZCYZTLLCQXYNJYCYYCYNZZQYYYEWYCZDCJYCCHYJLBTZYYCQWMPWPYMLGKDLDLGKQQBGYCHJXY";
            var oMultiDiff = {
                "19969": "DZ",
                "19975": "WM",
                "19988": "QJ",
                "20048": "YL",
                "20056": "SC",
                "20060": "NM",
                "20094": "QG",
                "20127": "QJ",
                "20167": "QC",
                "20193": "YG",
                "20250": "KH",
                "20256": "ZC",
                "20282": "SC",
                "20285": "QJG",
                "20291": "TD",
                "20314": "YD",
                "20340": "NE",
                "20375": "TD",
                "20389": "YJ",
                "20391": "CZ",
                "20415": "PB",
                "20446": "YS",
                "20447": "SQ",
                "20504": "TC",
                "20608": "KG",
                "20854": "QJ",
                "20857": "ZC",
                "20911": "PF",
                "20504": "TC",
                "20608": "KG",
                "20854": "QJ",
                "20857": "ZC",
                "20911": "PF",
                "20985": "AW",
                "21032": "PB",
                "21048": "XQ",
                "21049": "SC",
                "21089": "YS",
                "21119": "JC",
                "21242": "SB",
                "21273": "SC",
                "21305": "YP",
                "21306": "QO",
                "21330": "ZC",
                "21333": "SDC",
                "21345": "QK",
                "21378": "CA",
                "21397": "SC",
                "21414": "XS",
                "21442": "SC",
                "21477": "JG",
                "21480": "TD",
                "21484": "ZS",
                "21494": "YX",
                "21505": "YX",
                "21512": "HG",
                "21523": "XH",
                "21537": "PB",
                "21542": "PF",
                "21549": "KH",
                "21571": "E",
                "21574": "DA",
                "21588": "TD",
                "21589": "O",
                "21618": "ZC",
                "21621": "KHA",
                "21632": "ZJ",
                "21654": "KG",
                "21679": "LKG",
                "21683": "KH",
                "21710": "A",
                "21719": "YH",
                "21734": "WOE",
                "21769": "A",
                "21780": "WN",
                "21804": "XH",
                "21834": "A",
                "21899": "ZD",
                "21903": "RN",
                "21908": "WO",
                "21939": "ZC",
                "21956": "SA",
                "21964": "YA",
                "21970": "TD",
                "22003": "A",
                "22031": "JG",
                "22040": "XS",
                "22060": "ZC",
                "22066": "ZC",
                "22079": "MH",
                "22129": "XJ",
                "22179": "XA",
                "22237": "NJ",
                "22244": "TD",
                "22280": "JQ",
                "22300": "YH",
                "22313": "XW",
                "22331": "YQ",
                "22343": "YJ",
                "22351": "PH",
                "22395": "DC",
                "22412": "TD",
                "22484": "PB",
                "22500": "PB",
                "22534": "ZD",
                "22549": "DH",
                "22561": "PB",
                "22612": "TD",
                "22771": "KQ",
                "22831": "HB",
                "22841": "JG",
                "22855": "QJ",
                "22865": "XQ",
                "23013": "ML",
                "23081": "WM",
                "23487": "SX",
                "23558": "QJ",
                "23561": "YW",
                "23586": "YW",
                "23614": "YW",
                "23615": "SN",
                "23631": "PB",
                "23646": "ZS",
                "23663": "ZT",
                "23673": "YG",
                "23762": "TD",
                "23769": "ZS",
                "23780": "QJ",
                "23884": "QK",
                "24055": "XH",
                "24113": "DC",
                "24162": "ZC",
                "24191": "GA",
                "24273": "QJ",
                "24324": "NL",
                "24377": "TD",
                "24378": "QJ",
                "24439": "PF",
                "24554": "ZS",
                "24683": "TD",
                "24694": "WE",
                "24733": "LK",
                "24925": "TN",
                "25094": "ZG",
                "25100": "XQ",
                "25103": "XH",
                "25153": "PB",
                "25170": "PB",
                "25179": "KG",
                "25203": "PB",
                "25240": "ZS",
                "25282": "FB",
                "25303": "NA",
                "25324": "KG",
                "25341": "ZY",
                "25373": "WZ",
                "25375": "XJ",
                "25384": "A",
                "25457": "A",
                "25528": "SD",
                "25530": "SC",
                "25552": "TD",
                "25774": "ZC",
                "25874": "ZC",
                "26044": "YW",
                "26080": "WM",
                "26292": "PB",
                "26333": "PB",
                "26355": "ZY",
                "26366": "CZ",
                "26397": "ZC",
                "26399": "QJ",
                "26415": "ZS",
                "26451": "SB",
                "26526": "ZC",
                "26552": "JG",
                "26561": "TD",
                "26588": "JG",
                "26597": "CZ",
                "26629": "ZS",
                "26638": "YL",
                "26646": "XQ",
                "26653": "KG",
                "26657": "XJ",
                "26727": "HG",
                "26894": "ZC",
                "26937": "ZS",
                "26946": "ZC",
                "26999": "KJ",
                "27099": "KJ",
                "27449": "YQ",
                "27481": "XS",
                "27542": "ZS",
                "27663": "ZS",
                "27748": "TS",
                "27784": "SC",
                "27788": "ZD",
                "27795": "TD",
                "27812": "O",
                "27850": "PB",
                "27852": "MB",
                "27895": "SL",
                "27898": "PL",
                "27973": "QJ",
                "27981": "KH",
                "27986": "HX",
                "27994": "XJ",
                "28044": "YC",
                "28065": "WG",
                "28177": "SM",
                "28267": "QJ",
                "28291": "KH",
                "28337": "ZQ",
                "28463": "TL",
                "28548": "DC",
                "28601": "TD",
                "28689": "PB",
                "28805": "JG",
                "28820": "QG",
                "28846": "PB",
                "28952": "TD",
                "28975": "ZC",
                "29100": "A",
                "29325": "QJ",
                "29575": "SL",
                "29602": "FB",
                "30010": "TD",
                "30044": "CX",
                "30058": "PF",
                "30091": "YSP",
                "30111": "YN",
                "30229": "XJ",
                "30427": "SC",
                "30465": "SX",
                "30631": "YQ",
                "30655": "QJ",
                "30684": "QJG",
                "30707": "SD",
                "30729": "XH",
                "30796": "LG",
                "30917": "PB",
                "31074": "NM",
                "31085": "JZ",
                "31109": "SC",
                "31181": "ZC",
                "31192": "MLB",
                "31293": "JQ",
                "31400": "YX",
                "31584": "YJ",
                "31896": "ZN",
                "31909": "ZY",
                "31995": "XJ",
                "32321": "PF",
                "32327": "ZY",
                "32418": "HG",
                "32420": "XQ",
                "32421": "HG",
                "32438": "LG",
                "32473": "GJ",
                "32488": "TD",
                "32521": "QJ",
                "32527": "PB",
                "32562": "ZSQ",
                "32564": "JZ",
                "32735": "ZD",
                "32793": "PB",
                "33071": "PF",
                "33098": "XL",
                "33100": "YA",
                "33152": "PB",
                "33261": "CX",
                "33324": "BP",
                "33333": "TD",
                "33406": "YA",
                "33426": "WM",
                "33432": "PB",
                "33445": "JG",
                "33486": "ZN",
                "33493": "TS",
                "33507": "QJ",
                "33540": "QJ",
                "33544": "ZC",
                "33564": "XQ",
                "33617": "YT",
                "33632": "QJ",
                "33636": "XH",
                "33637": "YX",
                "33694": "WG",
                "33705": "PF",
                "33728": "YW",
                "33882": "SR",
                "34067": "WM",
                "34074": "YW",
                "34121": "QJ",
                "34255": "ZC",
                "34259": "XL",
                "34425": "JH",
                "34430": "XH",
                "34485": "KH",
                "34503": "YS",
                "34532": "HG",
                "34552": "XS",
                "34558": "YE",
                "34593": "ZL",
                "34660": "YQ",
                "34892": "XH",
                "34928": "SC",
                "34999": "QJ",
                "35048": "PB",
                "35059": "SC",
                "35098": "ZC",
                "35203": "TQ",
                "35265": "JX",
                "35299": "JX",
                "35782": "SZ",
                "35828": "YS",
                "35830": "E",
                "35843": "TD",
                "35895": "YG",
                "35977": "MH",
                "36158": "JG",
                "36228": "QJ",
                "36426": "XQ",
                "36466": "DC",
                "36710": "JC",
                "36711": "ZYG",
                "36767": "PB",
                "36866": "SK",
                "36951": "YW",
                "37034": "YX",
                "37063": "XH",
                "37218": "ZC",
                "37325": "ZC",
                "38063": "PB",
                "38079": "TD",
                "38085": "QY",
                "38107": "DC",
                "38116": "TD",
                "38123": "YD",
                "38224": "HG",
                "38241": "XTC",
                "38271": "ZC",
                "38415": "YE",
                "38426": "KH",
                "38461": "YD",
                "38463": "AE",
                "38466": "PB",
                "38477": "XJ",
                "38518": "YT",
                "38551": "WK",
                "38585": "ZC",
                "38704": "XS",
                "38739": "LJ",
                "38761": "GJ",
                "38808": "SQ",
                "39048": "JG",
                "39049": "XJ",
                "39052": "HG",
                "39076": "CZ",
                "39271": "XT",
                "39534": "TD",
                "39552": "TD",
                "39584": "PB",
                "39647": "SB",
                "39730": "LG",
                "39748": "TPB",
                "40109": "ZQ",
                "40479": "ND",
                "40516": "HG",
                "40536": "HG",
                "40583": "QJ",
                "40765": "YQ",
                "40784": "QJ",
                "40840": "YK",
                "40863": "QJG"
            };
            function checkCh(ch) {
                var uni = ch.charCodeAt(0);
                if (uni > 40869 || uni < 19968) {
                    return ch;
                }
                return (oMultiDiff[uni] ? oMultiDiff[uni] : (strChineseFirstPY.charAt(uni - 19968)));
            }
            function mkRslt(arr) {
                var arrRslt = [""];
                for (var i = 0,
                len = arr.length; i < len; i++) {
                    var str = arr[i];
                    var strlen = str.length;
                    if (strlen == 1) for (var k = 0; k < arrRslt.length; k++) arrRslt[k] += str;
                    else {
                        var tmpArr = arrRslt.slice(0);
                        arrRslt = [];
                        for (k = 0; k < strlen; k++) {
                            var tmp = tmpArr.slice(0);
                            for (var j = 0; j < tmp.length; j++) tmp[j] += str.charAt(k);
                            arrRslt = arrRslt.concat(tmp);
                        }
                    }
                }
                return arrRslt;
            }
            if (typeof(str) != "string") throw new Error( - 1, "\u51fd\u6570makePy\u9700\u8981\u5b57\u7b26\u4e32\u7c7b\u578b\u53c2\u6570!");
            var arrResult = new Array();
            for (var i = 0,
            len = str.length; i < len; i++) {
                var ch = str.charAt(i);
                arrResult.push(checkCh(ch));
            }
            return mkRslt(arrResult)[0];
        },
        /**
        	返回date1、date2之间相隔时间差
        	date格式:2002-02-02 10:10或者2002-02-02 10:10:00
        	mi表示返回的单位   毫秒:m 秒:s 分钟: M 小时: h 天: d
        **/
        calcTime:function(date1c,date2c,mi){
			if(date1c.trim()==""||date2c.trim()=="")return null;
			var date1 = $t.getDate(date1c);
			var date2 = $t.getDate(date2c);
			var maci ;
			if(mi=="s")maci = 1000;
			if(mi=="M")maci = 1000*60;
			if(mi=="h")maci = 1000*60*60;
			if(mi=="d")maci = 1000*60*60*24;
			if(mi=="m")maci = 1;
			return  Math.round(date1/ maci)-Math.round(date2 / maci);
        },
        /**
        	返回date对象，指定日期date，
        	格式为2002-02-02 10:10或者2002-02-02 10:10:00
        **/
        getDate:function(da){
			var arr   = da.split(" ");
			var arr1 = arr[0].split("-");
			var arr2 = arr[1].split(":");
			for(var i=0; i<3; i++) {
				if(!arr1[i])arr1[i] ="00";
				if(!arr2[i])arr2[i] ="00";
			}
			var date=new Date(arr1[0],arr1[1],arr1[2],arr2[0],arr2[1],arr2[2]);
			return date;
        },
		/**
			//参数
			{
				date:时间默认为当前时间,
				format:格式默认：yyyy-MM-dd
			}
			说明:  月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q) 可以用 1-2 个占位符
			年(y)可以用 1-4 个占位符，
			毫秒(S)只能用 1 个占位符(是 1-3 位的数字)如：
			("yyyy-MM-dd hh:mm:ss.S") ==> 2006-07-02 08:09:04.423
			 ||("yyyy-MM-dd E HH:mm:ss") ==> 2009-03-10 二 20:09:04
			 ||("yyyy-MM-dd EE hh:mm:ss") ==> 2009-03-10 周二 08:09:04
			  ||("yyyy-MM-dd EEE hh:mm:ss") ==> 2009-03-10 星期二 08:09:04
			   ||("yyyy-M-d h:m:s.S") ==> 2006-7-2 8:9:4.18
			    ,date:默认当前时间,其他时间请传入字符，如 2002-02-02 10:10:00 之类
		*/
        formatDate:function(dateobj){
			var date ;
			var fmt;
			if(!dateobj){
				date = new Date();
				fmt = "yyyy-MM-dd";
			}else{
				date = dateobj.date ? $t.getDate(dateobj.date) : new Date();
				fmt = dateobj.format || "yyyy-MM-dd hh:mm";
			}
			with(date){
				var o = {
					"M+" : getMonth()+1, //月份
					"d+" : getDate(), //日
					"h+" : getHours()%12 == 0 ? 12 :  getHours()%12, //小时
					"H+" : getHours(), //小时
					"m+" : getMinutes(), //分
					"s+" : getSeconds(), //秒
					"q+" : Math.floor(( getMonth()+3)/3), //季度
					"S" :  getMilliseconds() //毫秒
				};
				var week = {
					"0" : "\u65e5",
					"1" : "\u4e00",
					"2" : "\u4e8c",
					"3" : "\u4e09",
					"4" : "\u56db",
					"5" : "\u4e94",
					"6" : "\u516d"
				};
				if(/(y+)/.test(fmt))fmt=fmt.replace(RegExp.$1, (getFullYear()+"").substr(4 - RegExp.$1.length));
				if(/(E+)/.test(fmt))fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? "\u661f\u671f" : "\u5468") : "")+week[getDay()+""]);
				for(var k in o){
					if(new RegExp("("+ k +")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));
				}
			}
			return fmt;
        }
    };

    /**
	 * 验证组件仓库 包含：正则表达式、单独验证方法、常量等 在字符串中 控件的值表示为 ^name||^id
	 * $MStorage.rightMessage $MStorage.typeStorage $MStorage.checkMethodStorage
	 * $MStorage.toolMethodStorage $MStorage.coreMethodStorage
	 */
    $MStorage = {
        /**
		 * 默认样式定义
		 */
        redbord: "magican_redBorder",
        redBackground: "magican_redBackground",
        magican: "magican",
        error: "magican_error",
        right: "magican_right",
        warn: "magican_warn",
        teach: "magican_teach",
        /**
		 * 无法判断value的控件类型
		 */
        unsafeType: {
            type: 'checkbox,radio',
            tagname: 'SELECT'
        },
        /**
		 * 正确消息格式
		 */
        rightMessage: {
            result: true,
            message: ""
        },
        typeStorage: {
            emali: {
                type: /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/,
                message: '请输入正确的邮箱'
            },
            bigCase: {
                type: /^[A-Z]+$/,
                message: '只能输入大写字母'
            },
            smallCase: {
                type: /^[a-z]+$/,
                message: '只能输入小写字母'
            },
            letter: {
                type: /^[A-Za-z]+$/,
                message: '只能输入英文'
            },
            chinaese: {
                type: /^[\u0391-\uFFE5]+$/,
                message: '只能输入中文'
            },
            url: {
                type: /^http:\/\/[A-Za-z0-9]+\.[A-Za-z0-9]+[\/=\?%\-&_~`@[\]\':+!]*([^<>\"\"])*$/,
                message: '请输入正确的url地址'
            },
            ip: {
                type: /^(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5]).(0|[1-9]\d?|[0-1]\d{2}|2[0-4]\d|25[0-5])$/,
                message: '请输入正确的ip地址'
            },
            code: {
                type: /^[1-9]\d{5}$/,
                message: '请输入正确的区号'
            },
            qq: {
                type: /^[1-9]\d{4,10}$/,
                message: '请输入正确的QQ号码'
            },
            alpha: {
                type: /^[0-9a-zA-Z\_]+$/,
                message: '只能由数字或字母或下划线组成'
            },
            phone: {
                type: /^((\(\d{2,3}\))|(\d{3}\-))?(\(0\d{2,3}\)|0\d{2,3}-)?[1-9]\d{6,7}(\-\d{1,4})?$/,
                message: '请输入正确的电话'
            },
            num: {
                type: /^-?\d+(\.\d+)?$/,
                message: '请输入数字'
            },
            wholeNum: {
                type: /^(-|\+)?\d+$/,
                message: '请输入整数'
            },
            noloseNum: {
                type: /^\d+$/,
                message: '请输入非负整数'
            },
            nojustNum: {
                type: /^-\d+$/,
                message: '请输入非正整数'
            },
            justFloat: {
                type: /^([1-9]\d*|\d+\.\d+)$/,
                message: '请输入正浮点数'
            },
            postCode: {
                type: /^[0-9]{6}$/,
                message: '请输入正确的邮编'
            },
            fax: {
                type: /^[+]{0,1}(\d){1,3}[ ]?([-]?((\d)|[ ]){1,12})+$/,
                message: '请输入正确的邮编'
            },
            illegal: {
                type: '~!@#$%^&*()_+|`={}[]\";<>?,/',
                message: '含有非法字符'
            }
        },
        checkMethodStorage: {
            /**
			 * 必填 params 无
			 *
			 * @param {Object}
			 *            checkParam
			 */
            must: function() {
                return this.value ? $MStorage.rightMessage: {
                    result: false,
                    message: this.message || ("请输入" + this.realName)
                };
            },
            /**
			 * 类型检验 params 类型名称
			 *
			 * @param {Object}
			 *            this
			 */
            types: function() {
            	if(this.value){
	                return $MStorage.typeStorage[this.params].type.test(this.value) ? $MStorage.rightMessage: {
	                    result: false,
	                    message: this.message || $MStorage.typeStorage[this.params].message
	                };
	            }else{
	            	return $MStorage.rightMessage;
	            }
            },
            /**
			 * 非法字符验证， params 非法字符 或不写
			 *
			 * @param {Object}
			 *            this
			 */
            illegal: function() {
                var result = true;
                var unword = this.params || $MStorage.typeStorage.illegal.type;
                for (var i = 0; i < this.value.length; i++) {
                    var c = this.value.charAt(i);
                    if (unword.indexOf(c) != -1) {
                        return {
                            result: false,
                            message: this.message || (this.realName + $MStorage.typeStorage.illegal.message)
                        };
                    }
                }
                return $MStorage.rightMessage;
            },
            /**
			 * 长度比较器 params > >= == < <= <> 例如 ['>5','<10'] 如果要与其他控件的值的长度比较
			 * ['>^userName|用户名'] 将提示不能小于用户名的长度 两种方式混用：['>5','>^userName|用户名1']
			 *
			 * @param {Object}
			 *            this
			 */
            compareLength: function() {
                var lengthSelf = $t.getLength(this.value);
                for (var i = 0; i < this.params.length; i++) {
                    if (this.params[i].indexOf("|") === -1) {
                        eval("var compareResult = " + lengthSelf + this.params[i]);
                        if (!compareResult) {
                            return {
                                result: false,
                                message: this.message || (this.realName + "不能" + $t.explainCompare(this.params[i]) + "个字符")
                            };
                        }
                    } else {
                        var compareParams = this.params[i].split("^");
                        var compareAction = compareParams[0];
                        compareParams = compareParams[1].split("|");
                        var compareLength = $t.$value(compareParams[0]).length;
                        var compareName = compareParams[1];
                        eval("var compareResult = " + lengthSelf + compareAction + compareLength);
                        if (!compareResult) {
                            return {
                                result: false,
                                message: this.message || (this.realName + "的长度不能" + $t.explainCompare(compareAction) + compareName + "的长度")
                            };
                        }
                    }
                }
                return $MStorage.rightMessage;
            },
            /**
			 * 值比较器 params > >= == < <= <> 例如 ['>5','<10'] 如果要与其他控件的值比较
			 * ['>^userName|用户名1','<^userName2|用户名2'] 将提示不能小于用户名
			 * 两种方式混用：['>5','>^userName|用户名1']
			 *
			 * @param {Object}
			 *            this
			 */
            compareValue: function() {
            	if(this.value){
	                for (var i = 0; i < this.params.length; i++) {
	                    if (this.params[i].indexOf("^") === -1) {
	                        eval("var compareResult = '" + this.value + "'" + this.params[i]);
	                        if (!compareResult) {
	                            return {
	                                result: false,
	                                message: this.message || (this.realName + "不能" + $t.explainCompare(this.params[i]))
	                            };
	                        }
	                    } else {
	                        var compareParams = this.params[i].split("^");
	                        var compareAction = compareParams[0];
	                        compareParams = compareParams[1].split("|");
	                        var valuetemp = $t.$value(compareParams[0]);
	                        if(!valuetemp)continue;
	                        var compareValue = "'" + valuetemp + "'";
	                        var compareName = compareParams[1];
	                        eval("var compareResult = '" + this.value + "'" + compareAction + compareValue);
	                        if (!compareResult) {
	                            return {
	                                result: false,
	                                message: this.message || (this.realName + "不能" + $t.explainCompare(compareAction) + compareName)
	                            };
	                        }
	                    }
	                }
                }
                return $MStorage.rightMessage;
            },
            /**
			 * 选择个数比较器 params > >= == < <= <> 例如 ['>5','<10'] 如果要与其他控件的选择个数比较
			 * ['>^userName|用户名1','<^userName2|用户名2'] 将提示不能小于用户名
			 * 两种方式混用：['>5','>^userName|用户名1']
			 *
			 * @param {Object}
			 *            this
			 */
            chooseCompare: function() {
                var chooseNumSelf = $t.$checkNum(this.name);
				
                for (var i = 0; i < this.params.length; i++) {
                    if (this.params[i].indexOf("|") === -1) {
                        eval("var compareResult = " + chooseNumSelf + this.params[i]);
                        if (!compareResult) {
                            return {
                                result: false,
                                message: this.message || (this.realName + "的选择个数不能" + $t.explainCompare(this.params[i]))
                            };
                        }
                    } else {
                        var compareParams = this.params[i].split("^");
                        var compareAction = compareParams[0];
                        compareParams = compareParams[1].split("|");
                        var compareValue = $t.$checkNum(compareParams[0]);
                        var compareName = compareParams[1];
                        eval("var compareResult = " + chooseNumSelf + compareAction + compareValue);
                        if (!compareResult) {
                            return {
                                result: false,
                                message: this.message || (this.realName + "的选择个数不能" + $t.explainCompare(compareAction) + compareName + "的选择个数")
                            };
                        }
                    }
                }
				
                return $MStorage.rightMessage;
            },
            /**
			 * 文件类型比较 params 文件类型 rar,jpg,bmp
			 *
			 * @param {Object}
			 *            this
			 */
            suffix: function() {
            	if(this.value){
	                var fileType = (this.value.substring(this.value.lastIndexOf(".") + 1, this.value.length)).toLowerCase();
	                return (this.params.toLowerCase().indexOf(fileType) === -1) ? {
	                    result: false,
	                    message: this.message || (this.realName + "文件类型错误,请选择后缀名为" + this.params + "的文件")
	                }: $MStorage.rightMessage;
                }else{
                	return $MStorage.rightMessage;
                }
            },
            /**
			 * 反文件类型比较 params 文件类型 rar,jpg,bmp
			 *
			 * @param {Object}
			 *            this
			 */
            unsuffix: function() {
            	if(this.value){
	                var fileType = (this.value.substring(this.value.lastIndexOf(".") + 1, this.value.length)).toLowerCase();
	                return (this.params.toLowerCase().indexOf(fileType) !== -1) ? {
	                    result: false,
	                    message: this.message || (this.realName + "文件类型错误,不能选择后缀名为" + this.params + "的文件")
	                }: $MStorage.rightMessage;
                }else{
                	return $MStorage.rightMessage;
                }
            },
            /**
			 * 自定义正则表达式 params [自定义正则表达式1,自定义正则表达式2]
			 *
			 * @param {Object}
			 *            this
			 */
            regular: function() {
            	if(this.value){
	                for (var i = 0; i < this.params.length; i++) {
	                    if (!new RegExp(this.params[i], 'g').test(this.value)) {
	                        return {
	                            result: false,
	                            message: this.message || (this.realName + "输入错误！")
	                        };
	                    }
	                }
	                return $MStorage.rightMessage;
                }else{
                	return $MStorage.rightMessage;
                }
            },
            /**
			 * ajax 验证方法 调用dwr实现 params dwrContext dwrClassName dwr基类 dwrReturn
			 * dwr返回值类型
			 *
			 * @param {Object}
			 *            this
			 */
            dwr: function() {
                if (this.value) {
                    var dwrResult = $t.dwr(this.params);
                    return dwrResult ? $MStorage.rightMessage: {
                        result: false,
                        message: this.message || ("输入的" + this.realName + "已经存在！")
                    };
                } else {
                    return $MStorage.rightMessage;
                }
            },
            /**
			 * 空格验证 params 无
			 *
			 * @param {Object}
			 *            this
			 */
            trimCheck: function() {
            	if(this.value){
	                return this.value.indexOf(" ") != -1 ? {
	                    result: false,
	                    message: this.message || (this.realName + "不能输入空格！")
	                }: $MStorage.rightMessage;
	            }else{
                	return $MStorage.rightMessage;
                }
            },
            /**
			 * 自定义方法验证 params 方法全称
			 *
			 * @param {Object}
			 *            this
			 */
            method: function() {
                eval("var methodResult = " + this.params + "()");
                return !methodResult ? {
                    result: false,
                    message: this.message || (this.realName + "输入错误！")
                }: $MStorage.rightMessage;
            }
        },
        toolMethodStorage: {
            /**
			 * 内部使用的工具方法仓库 --修复textarea
			 *
			 * @param {Object}
			 *            name
			 */
            repairTextarea: function() {
                var aObj = $t.$(this.name);
                if (('tagName' in aObj)) {
                    if (aObj.tagName === "TEXTAREA") {
                        aObj.style.wordWarp = "break-word";
                        aObj.style.wordBreak = "break-all";
                    }
                }
            },
            /**
			 * 为rule的控件添加事件
			 *
			 * @param {Object}
			 *            event
			 * @param {Object}
			 *            fun
			 */
            appendEvent: function(eventName, funName) {
                var funArr = funName.split(',');
                if ($t.$ie) {
                    for (var i = funArr.length - 1; i >= 0; i--) {
						if(this.ele.length){
							for(var j=0;j<this.ele.length;j++){
								if ($MStorage.coreMethodStorage[funArr[i]]) $t.$addEvent(this.ele[j], eventName, $MStorage.coreMethodStorage[funArr[i]], this);
							}
						}else{
	                        if ($MStorage.coreMethodStorage[funArr[i]]) $t.$addEvent(this.ele, eventName, $MStorage.coreMethodStorage[funArr[i]], this);
						}
                    }
                } else {
                    for (var i = 0; i < funArr.length; i++) {
						if(this.ele.length){
							for(var j=0;j<this.ele.length;j++){
								if ($MStorage.coreMethodStorage[funArr[i]]) $t.$addEvent(this.ele[j], eventName, $MStorage.coreMethodStorage[funArr[i]], this);
							}
						}else{
	                        if ($MStorage.coreMethodStorage[funArr[i]]) $t.$addEvent(this.ele, eventName, $MStorage.coreMethodStorage[funArr[i]], this);
						}
                    }
                }
                return $MStorage;
            }
        },
        coreMethodStorage: {
            /**
			 * 初始化R
			 */
            initR: function(rule, M, ruleName) {
            	M.rules = M.rules || {};
                if (!M.rules[ruleName]) M.rules[ruleName] = rule;
                rule.eleName = ruleName;
                rule.M = M;
                rule.result = true;
                rule.onCheck = rule.onCheck || M.onCheck;
                rule.typeName = "R";
                rule.hasCheck = false;
                rule.realName = rule.realName || rule.eleName;
                rule.showRightMessage = rule.showRightMessage || M.showRightMessage;
                // 这个rule对象所定义的元素【集合】
                rule.ele = $t.$(rule.eleName);
                if (!rule.ele) {
                    delete M.rules[ruleName];
                    return;
                }
                // 该rule如何进行正确输入的提示，默认采用$c的全局设置
                rule.teachMessage = rule.teachMessage || M.teachMessage;
                rule.showTeachMessage = rule.showTeachMessage || M.showTeachMessage;
                // 开关 是否有效
                rule.valid = rule.valid || 'yes';
                rule.events = rule.events || M.events;
                if (rule.events) {
                    var eventsArr = rule.events.split("|");
                    for (var i = 0; i < eventsArr.length; i++) {
                        var tempArr = eventsArr[i].split(">");
                        $MStorage.toolMethodStorage.appendEvent.apply(rule, [tempArr[0], tempArr[1]])
                    }
                }
                if(rule.onload)rule.onload();
                rule.check = function() {
                    if (!rule.onCheck) {
                        rule.result = true;
                        return true;
                    }
                    var checks = rule.onCheck.split(">");
                    rule.result = $MStorage.coreMethodStorage[checks[0]].apply(rule);
                    checks = checks[1] ? checks[1].split(",") : "";
                    if (!checks) return rule.result;

                    for (var i = 0; i < checks.length; i++) {
                        if ($MStorage.coreMethodStorage[checks[i]]) {
                            $MStorage.coreMethodStorage[checks[i]].apply(rule);
                        }
                    };
                    return rule.result;
                };
                rule.append = function(){
                    var checks = rule.onCheck.split(">");
                    checks = checks[1] ? checks[1].split(",") : "";
                    if (!checks) return;
                    for (var i = 0; i < checks.length; i++) {
                        if ($MStorage.coreMethodStorage[checks[i]]) {
                            $MStorage.coreMethodStorage[checks[i]].apply(rule);
                        }
                    };
                };
                rule.add = function(Name, params, message) {
                    rule.needs = rule.needs || {};
                    rule.needs[Name] = {
                        params: params,
                        message: message
                    };
                };
            },
            /**
			 * M初始化
			 */
            initM: function() {
            	if(this.typeName)return;
                this.typeName = "M";
                if (this.rightMessage) $MStorage.rightMessage.message = this.rightMessage;
                this.showRightMessage = this.showRightMessage || "no";

                // 指引消息
                this.teachMessage = this.teachMessage || "";
                // 是否显示指引信息
                this.showTeachMessage = this.showTeachMessage || "no";
                // hiptop
                this.hipTop = this.hipTop ? $t.$(this.hipTop) : null;
                // 事件
                this.events = this.events || null;
                // 调用
                this.onCheck = this.onCheck || "";

                // 跳过验证
                this.skip = false;
                this.result = true;
                for (var ruleName in this.rules) {
                    var rule = this.rules[ruleName];
                    $MStorage.coreMethodStorage.initR(rule, this, ruleName);
                }
                this.check = function() {
                    if (!this.onCheck) {
                        this.result = true;
                        return true;
                    }
                    var checks = this.onCheck.split(">");
                    this.result = this.skip ? true: $MStorage.coreMethodStorage[checks[0]].apply(this);
                    checks = checks[1] ? checks[1].split(",") : "";
                    if (!checks) return this.result;
                    for (var i = 0; i < checks.length; i++) {
                        if ($MStorage.coreMethodStorage[checks[i]]) {
                            $MStorage.coreMethodStorage[checks[i]].apply(this);
                        }
                    };
                    return this.result;
                };
                this.add = function(ruleName, rule) {
                    $MStorage.coreMethodStorage.initR(rule, this, ruleName);
                };
                this.remove = function(ruleName) {
                    delete this.rules[ruleName];
                };
                if(this.onload){
                	this.onload();
                }
                return $MStorage;
            },
            /**
			 * R 验证自己
			 *
			 * @returns
			 */
            checkSelf: function() {
                $MStorage.coreMethodStorage.clear.apply(this);
                // rule定义无效，返回
                if (this.valid === 'no') {
                    // 没有验证
                    this.hasCheck = false;
                    this.result = true;
                    return this;
                }
                this.hasCheck = true;
                for (var checkName in this.needs) {
                    var check = this.needs[checkName];
                    if (check.valid === 'no') continue;
                    if (!$MStorage.checkMethodStorage[checkName]) continue;
                    var result = $MStorage.checkMethodStorage[checkName].apply({
                        name: this.eleName,
                        realName: this.realName,
                        value: checkName !== "trimCheck" && this.needs.trimCheck ? this.ele.value.trim() : this.ele.value,
                        params: check.params,
                        message: check.message
                    });
                    if (!result.result) {
                        this.result = result.result;
                        this.errorMessage = result.message;
                        this.isWarn = check.isWarn;
                        return this;
                    }
                }
                this.result = $MStorage.rightMessage.result;
                this.rightMessage = $MStorage.rightMessage.message;
                this.isWarn = false;
                return this;
            },
            /**
			 * M /R 验证全部，但遇到错误便停止
			 *
			 * @returns {Boolean}
			 */
            checkOne: function() {
                $MStorage.coreMethodStorage.clear.apply(this);
                var M = this.typeName === "M" ? this: this.M;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (!$MStorage.coreMethodStorage.checkSelf.apply(rule).result) return false;
                }
                return true;
            },
            /**
			 * M / R方法，验证全部规则
			 *
			 * @returns {Boolean}
			 */
            checkAll: function() {
                $MStorage.coreMethodStorage.clear.apply(this);
                var M = this.typeName === "M" ? this: this.M;
                if (M.skip) {
                    return true;
                }
                var flag = true;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (!$MStorage.coreMethodStorage.checkSelf.apply(rule).result) flag = false;
                }
                return flag;
            },
            /**
			 * 改变控件边框
			 */
            changeBorder: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.changeBorder.apply(this.rules[ruleName]);
                    }
                } else {
                    if (!this.hasCheck) return $MStorage;
                    if (!this.result) {
						if(this.ele.length){
							for(var i = 0;i<this.ele.length;i++){
								$t.addClass(this.ele[i], $MStorage.redbord);
							}
						}else{
	                        $t.addClass(this.ele, $MStorage.redbord);
						}
                    } else {
						if(this.ele.length){
							for(var i = 0;i<this.ele.length;i++){
								$t.removeClass(this.ele[i], $MStorage.redbord);
							}
						}else{
	                        $t.removeClass(this.ele, $MStorage.redbord);
						}
                    }
                }
                return $MStorage;
            },
            /**
			 * 改变父控件border
			 */
            changeParentBorder: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.changeParentBorder.apply(this.rules[ruleName]);
                    }
                } else {
                    if (!this.hasCheck) return $MStorage;
                    var parentEle = this.ele.length ? this.ele[0].parentNode : this.ele.parentNode;
                    if (!parentEle) return $MStorage;
                    if (!this.result) {
                        $t.addClass(parentEle, $MStorage.redbord);
                    } else {
                        $t.removeClass(parentEle, $MStorage.redbord);
                    }
                }
                return $MStorage;
            },
            changeBackGround: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.changeBackGround.apply(this.rules[ruleName]);
                    }
                } else {
                    if (!this.hasCheck) return $MStorage;
                    if (!this.result) {
						if(this.ele.length){
							for(var i = 0;i<this.ele.length;i++){
								$t.addClass(this.ele[i], $MStorage.redBackground);
							}
						}else{
	                        $t.addClass(this.ele, $MStorage.redBackground);
						}
                    } else {
						if(this.ele.length){
							for(var i = 0;i<this.ele.length;i++){
								$t.removeClass(this.ele[i], $MStorage.redBackground);
							}
						}else{
	                        $t.removeClass(this.ele, $MStorage.redBackground);
						}
                    }
                }
                return $MStorage;
            },
            changeBackGroundParent: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.changeBackGroundParent.apply(this.rules[ruleName]);
                    }
                } else {
                    if (!this.hasCheck) return $MStorage;
                    var parentEle = this.ele.length ? this.ele[0].parentNode : this.ele.parentNode;
                    if (!parentEle) return $MStorage;
                    if (!this.result) {
                        $t.addClass(parentEle, $MStorage.redBackground);
                    } else {
                        $t.removeClass(parentEle, $MStorage.redBackground);
                    }
                }
                return $MStorage;
            },
            /**
			 * 气泡提示
			 */
            tip: function() {
            	if(!$(this.ele).poshytip){
            		return;
            	}
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.tip.apply(this.rules[ruleName]);
                    }
                } else {
                    var append = {
                        need: false,
                        className: $MStorage.magican
                    };
                    try{
                    	this.isFouce = document.activeElement.id === this.eleName || document.activeElement.name === this.eleName;
                    }catch(e){
                    	this.isFouce = false;
                    }
                    if (this.isFouce && this.teachMessage && !this.ele.value && this.showTeachMessage === "yes") {
                        append.need = true;
                        append.message = this.teachMessage;
                        append.className += " " + $MStorage.teach;
                    } else if (this.hasCheck) {
                        if (this.result  && this.ele.value) {
                            append.need = false;
                        } else if (!this.result && this.isWarn) {
                            append.need = true;
                            append.message = this.errorMessage;
                            append.className += " " + $MStorage.warn;
                        } else if (!this.result) {
                            append.need = true;
                            append.message = this.errorMessage;
                            append.className += " " + $MStorage.error;
                        }
                    }
					var ee = this.ele.length ? this.ele[0] : this.ele;
	                if (!append.need) {
	                	if(!this.hasTip)
	                    	$(ee).poshytip("hide");
	                } else {
	                	if(!this.hasTip){
		                    $(ee).poshytip({
									alignTo: 'target',
									alignX: 'inner-left',
									offsetX: 0,
									offsetY: 5,
		                    		showOn: 'none',
		                    		content:"<span class=\""+append.className+"\">"+append.message+"</span>"
		                    	}).poshytip("show");
		                    this.hasTip = true;
	                	}else{
	                		$(ee).poshytip("update","<span class=\""+append.className+"\">"+append.message+"</span>").poshytip("show");
	                	}
	                 }
                }
                return $MStorage;
            },
            select:function(){
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.select.apply(this.rules[ruleName]);
                    }
                } else {
					if (!this.result) {
						try{
							if(this.ele.length){
								for(var i = 0;i<this.ele.length;i++){
									this.ele[i].select();
								}
							}else{
								this.ele.select();
							}
						}catch(e){
						}
                    }
                }
                return $MStorage;
            },
            focus:function(){
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.focus.apply(this.rules[ruleName]);
                    }
                } else {
					if (!this.result) {
						try{
							if(this.ele.length){
								for(var i = 0;i<this.ele.length;i++){
									this.ele[i].focus();
								}
							}else{
								this.ele.focus();
							}
						}catch(e){
						}
                    }
                }
                return $MStorage;
            },
            /**
			 * R 方法 在元素的后面追加一个元素用来显示信息
			 */
            appendAfter: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.appendAfter.apply(this.rules[ruleName]);
                    }
                } else {
                    var append = {
                        show: false,
                        className: $MStorage.magican
                    };
                    try{
                    	this.isFouce = document.activeElement.id === this.eleName || document.activeElement.name === this.eleName;
                    }catch(e){
                    	this.isFouce = false;
                    }
					var ee = this.ele.length ? this.ele[this.ele.length-1] : this.ele;
                    if (this.isFouce && this.teachMessage && !ee.value && this.showTeachMessage === "yes") {
                        append.show = true;
                        append.message = this.teachMessage;
                        append.className += " " + $MStorage.teach;
                    } else if (this.hasCheck) {
                        if (this.result && this.showRightMessage === "yes" && this.ele.value) {
                            append.show = true;
                            append.message = this.rightMessage;
                            append.className += " " + $MStorage.right;
                        } else if (!this.result && this.isWarn) {
                            append.show = true;
                            append.message = this.errorMessage;
                            append.className += " " + $MStorage.warn;
                        } else if (!this.result) {
                            append.show = true;
                            append.message = this.errorMessage;
                            append.className += " " + $MStorage.error;
                        }
                    }
                    var spanParent = ee.nextSibling;
                    if (!append.show) {
                        if (spanParent && spanParent.getAttribute && spanParent.getAttribute("magican") === 'afterMessage') ee.parentNode.removeChild(spanParent);
                    } else {
                        var spanMessage;
                        if (spanParent && spanParent.getAttribute && spanParent.getAttribute("magican") === 'afterMessage') spanMessage = spanParent.childNodes[1];
                        else {
                            spanParent = document.createElement("span");
                            spanParent.setAttribute("magican", "afterMessage");
                            var spanNbsp = document.createElement("span");
                            spanNbsp.innerHTML = "&nbsp;&nbsp;";
                            spanMessage = document.createElement("span");
                            spanParent.appendChild(spanNbsp);
                            spanParent.appendChild(spanMessage);
                            $t.insertAfter(spanParent, ee);
                        }
                        if (spanMessage) {
                            spanMessage.className = append.className;
                            spanMessage.innerHTML = append.message;
                        }
                    }
                }
                return $MStorage;
            },
            /**
			 * M对象方法,用普通alert方式弹出提示
			 */
            alert: function() {
                var M = this.typeName === "M" ? this: this.M;
                var mess = '',
                iswarn = true;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (rule.hasCheck) {
                        if (!rule.result && rule.isWarn) {
                            mess += "警告：" + rule.errorMessage + "\n\r";
                        } else if (!rule.result) {
                            iswarn = false;
                            mess += "错误：" + rule.errorMessage + "\n\r";
                        }
                    }
                }
                if (mess) {
                    if (iswarn) {
                        mess += "\n\r确定继续吗？";
                        if (confirm(mess)) {
                            M.skip = true;
                            M.submit();
                        } else {
                            M.skip = false;
                        }
                    } else {
                        alert(mess);
                    }
                }
                return $MStorage;
            },
            ympAlert: function() {
                var mess = '',
                widthinfo = 0,
                heightinfo = 0,
                iswarn = true;
                var M = this.typeName === "M" ? this: this.M;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (rule.hasCheck) {
                        if (!rule.result && rule.isWarn) {
                            mess += "<font color='blue'>警告：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        } else if (!rule.result) {
                            iswarn = false;
                            mess += "<font color='red'>错误：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        }
                    }
                }
                if (mess) {
                    widthinfo = (100 + widthinfo * 12) < 300 ? 300 : (100 + widthinfo * 12);
                    mess = mess.trim().slice(0, -4);
                    heightinfo = heightinfo * 15 + 100  < 200 ? 200 : heightinfo * 15 + 100;
                    if (iswarn) {
                        heightinfo = heightinfo != 200 ? (heightinfo + 50) : heightinfo;
                        heightinfo = heightinfo > 600 ? 600 :heightinfo;
                        ymPrompt.confirmInfo({
                            message: mess + '<br>确定继续吗？',
                            width: widthinfo,
                            title: '信息提示',
                            height: heightinfo,
                            handler: function(tp) {
                                if (tp === "ok") {
                                    M.skip = true;
                                    M.submit();
                                } else {
                                    M.skip = false;
                                }
                            }
                        });
                    } else {
                    	heightinfo = heightinfo > 600 ? 600 :heightinfo;
                        ymPrompt.alert({
                            message: mess,
                            width: widthinfo,
                            height: heightinfo,
                            title: '出错了！'
                        });
                    }
                }
                return $MStorage;
            },
            lhgAlert: function() {
                if (!window.ask) return;
                var mess = '',
                widthinfo = 0,
                heightinfo = 0,
                iswarn = true;
                var M = this.typeName === "M" ? this: this.M;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (rule.hasCheck) {
                        if (!rule.result && rule.isWarn) {
                            mess += "<font color='blue'>警告：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        } else if (!rule.result) {
                            iswarn = false;
                            mess += "<font color='red'>错误：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        }
                    }
                }
                if (mess) {
                    widthinfo = (100 + widthinfo * 12) < 300 ? 300 : (100 + widthinfo * 12);
                    mess = mess.trim().slice(0, -4);
                    heightinfo = heightinfo * 15 + 100 < 200 ? 200 : (heightinfo * 15 + 100);
                    if (iswarn) {
                        heightinfo = heightinfo != 200 ? (heightinfo + 50) : heightinfo;
                        heightinfo = heightinfo > 600 ? 600 :heightinfo;
                        ask({
                            message: mess + '<br>确定继续吗？',
                            width: widthinfo,
                            height: heightinfo,
                            fn: function(tp) {
                                if (tp === "yes") {
                                    M.skip = true;
                                    M.submit();
                                } else {
                                    M.skip = false;
                                }
                            }
                        });
                    } else {
                    	heightinfo = heightinfo > 600 ? 600 :heightinfo;
                        info({
                            message: mess,
                            width: widthinfo,
                            height: heightinfo
                        });
                    }
                }
                return $MStorage;
            },
            /**
			 * HipTop效果
			 */
            hipTop: function() {
                var mess = '',
                widthinfo = 0,
                heightinfo = 0,
                iswarn = true;
                var M = this.typeName === "M" ? this: this.M;
                if (!M.hipTop) {
                    return;
                }
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (rule.hasCheck) {
                        if (!rule.result && rule.isWarn) {
                            mess += "<font color='blue'>警告：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        } else if (!rule.result) {
                            iswarn = false;
                            mess += "<font color='red'>错误：</font>" + rule.errorMessage + "<br>";
                            widthinfo = rule.errorMessage.length > widthinfo ? rule.errorMessage.length: widthinfo;
                            heightinfo++;
                        }
                    }
                }
                if (mess) {
                    widthinfo = (100 + widthinfo * 12) < 300 ? 300 : (100 + widthinfo * 12);
                    mess = mess.trim().slice(0, -4);
                    M.hipTop.innerHTML = mess;
                    M.hipTop.style.display = "block";
                    return $MStorage;
                }
                M.hipTop.style.display = "none";
                return $MStorage;
            },
            /**
			 * jqMsg效果
			 */
            jqMsg: function() {
                var M = this.typeName === "M" ? this: this.M;
                var mess = '',
                iswarn = true;
                for (var ruleName in M.rules) {
                    var rule = M.rules[ruleName];
                    if (rule.hasCheck) {
                        if (!rule.result && rule.isWarn) {
                            mess += "警告：" + rule.errorMessage + "\n\r";
                        } else if (!rule.result) {
                            iswarn = false;
                            mess += "错误：" + rule.errorMessage + "\n\r";
                        }
                    }
                }
                mess && $ && $.msg && $.msg(mess,true);
                return $MStorage;
            },
            /**
			 * 清除效果
			 */
            clear: function() {
                if (this.typeName === "M") {
                    for (var ruleName in this.rules) {
                        $MStorage.coreMethodStorage.clear.apply(this.rules[ruleName]);
                    }
                } else {
                    var parentEle = this.ele.length ? this.ele[0].parentNode : this.ele.parentNode;
                    // appendNextCellSelf
                    if (parentEle) {
                        $t.removeClass(parentEle, $MStorage.redBackground);
                        $t.removeClass(parentEle, $MStorage.redbord);
                        // backgroundColor
						if(this.ele.length){
							for(var i = 0;i<this.ele.length;i++){
								$t.removeClass(this.ele[i], $MStorage.redBackground);
								$t.removeClass(this.ele[i], $MStorage.redbord);
							}
						}else{
							$t.removeClass(this.ele, $MStorage.redBackground);
							$t.removeClass(this.ele, $MStorage.redbord);
						}
                        // appendAfterSelf
                        spanParent = this.ele.length ? this.ele[this.ele.length-1].nextSibling : this.ele.nextSibling;
                        if (spanParent && spanParent.getAttribute && spanParent.getAttribute("magican") === 'afterMessage') parentEle.removeChild(spanParent);
                    }
					var ee = this.ele.length ? this.ele[0] : this.ele;
                    if(this.hasTip && ee){
                    	$(ee).poshytip("hide");
                    }
                }
            }
        }
    };
    /**
	 * M对象 mname M对象 的名称
	 *
	 * @param {Object}
	 *            mName
	 */
    $m = function(mName) {
        $M[mName] = this;
        this.name = mName;
        this.submit = function() {
            if($t.$(mName) && $t.$(mName).submit)
            	$t.$(mName).submit();
        }
        this.init = function(){
        	$MStorage.coreMethodStorage.initM.apply(this);
        }
    };
    $t.importCss($t.getBasePath() + "/resource/base/js/validate/validate.css");
    $t.$addEvent(window, "load",
    function() {
        for (var m in $M) {
            $MStorage.coreMethodStorage.initM.apply($M[m]);
        }
    },
    null, null);
    $MT = $t;
    $Form = $m;
})();



/*jqery效果通用*/
if(window.jQuery){
	$(document).ready(
		function(){
			$("input[type=text]").bind("focus blur",function(){
				$(this).toggleClass("list-textclick");
				$(this).toggleClass("list-text");
			}).addClass("list-text");
			$("input[type=button]").each(function(){
				if(!this.className){
					$(this).addClass("button green");
				}
			});
			$(".gn-link").hover(function(){
				$(this).toggleClass("gn-link");
				$(this).toggleClass("gn-hover");
			});
		}
	)
}

function magican(obj){
	if(obj.nodeName == "INPUT"  ){
		if(obj.type == "text"){
			$(obj).bind("focus blur",function(){
				$(this).toggleClass("list-textclick");
				$(this).toggleClass("list-text");
			}).addClass("list-text");
		}else if(obj.type == "button"){
			if(!obj.className){
				$(obj).addClass("button green");
			}
		}
	}
}
function magicanForJquery(obj){
	if(obj[0].nodeName == "INPUT"  ){
		if(obj.attr("type") == "text"){
			obj.bind("focus blur",function(){
				$(this).toggleClass("list-textclick");
				$(this).toggleClass("list-text");
			}).addClass("list-text");
		}else if(obj.attr("type") == "button"){
			if(!obj[0].className){
				obj.addClass("button green");
			}
		}
	}
	return obj;
}