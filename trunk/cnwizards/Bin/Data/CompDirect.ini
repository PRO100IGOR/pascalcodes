[D5]
{$A+}=Fields are aligned.
{$A-}=Fields are never aligned.
{$ALIGN ON}=Fields are aligned.
{$ALIGN OFF}=Fields are never aligned.
{$APPTYPE GUI}=The compiler generates a graphical UI application.
{$APPTYPE CONSOLE}=The compiler generates a console application.
{$C+}=Enables the generation of code for assertions.
{$C-}=Disables the generation of code for assertions.
{$ASSERTIONS ON}=Enables the generation of code for assertions.
{$ASSERTIONS OFF}=Disables the generation of code for assertions.
{$B+}=The compiler generates code for complete Boolean expression evaluation.
{$B-}=The compiler generates code for short-circuit Boolean expression evaluation.
{$BOOLEVAL ON}=The compiler generates code for complete Boolean expression evaluation.
{$BOOLEVAL OFF}=The compiler generates code for short-circuit Boolean expression evaluation.
{$D+}=Enables the generation of debug information.
{$D-}=Disables the generation of debug information.
{$DEBUGINFO ON}=Enables the generation of debug information.
{$DEBUGINFO OFF}=Disables the generation of debug information.
{$DEFINE |}=Defines a Delphi conditional symbol with the given name.
{$DENYPACKAGEUNIT ON}=Prevents the Delphi unit in which it appears from being placed in a package.
{$DENYPACKAGEUNIT OFF}=Not prevents the Delphi unit in which it appears from being placed in a package.
{$DESCRIPTION '|'}=Inserts the text you specify into the module description entry in the header of an executable, DLL, or package.
{$DESIGNONLY ON}=Causes the package where it occurs to be compiled for installation in the IDE.
{$DESIGNONLY OFF}=Turns off the switch of design only.
{$ELSE}=Switches between compiling and ignoring the source code delimited by the previous {$IFxxx} and the next {$ENDIF} or {$IFEND}.
{$ENDIF}=Ends the conditional compilation initiated by the last {$IFxxx} directive.
{$E |}=Sets the extension of the executable file generated by the compiler.
{$EXTENSION |}=Sets the extension of the executable file generated by the compiler.
{$ObjExportAll On}=Exports all symbols in the unit file in which it occurs.
{$ObjExportAll Off}=Not exports all symbols in the unit file in which it occurs.
{$X+}=Enables Delphi's extended syntax.
{$X-}=Disables Delphi's extended syntax.
{$EXTENDEDSYNTAX ON}=Enables Delphi's extended syntax.
{$EXTENDEDSYNTAX OFF}=Disables Delphi's extended syntax.
{$EXTERNALSYM |}=Prevents the specified Delphi symbol from appearing in header files generated for C++.
{$HINTS ON}=Enables the generation of hint messages by the Delphi compiler.
{$HINTS OFF}=Disables the generation of hint messages by the Delphi compiler.
{$HPPEMIT '|'}=Adds a specified symbol to the header file generated for C++.
{$IFDEF |}=Compiles the Delphi source code that follows it if name is defined.
{$IFNDEF |}=Compiles the Delphi source code that follows it if name is not defined.
{$IFOPT |}=Compiles the Delphi source code that follows it if switch is currently in the specified state.
{$IMAGEBASE |}=Controls the default load address for an application, DLL, or package.
{$IMPLICITBUILD ON}=Not prevents the source file in which it occurs from being implicitly recompiled later.
{$IMPLICITBUILD OFF}=Prevents the source file in which it occurs from being implicitly recompiled later.
{$I |}=Instructs the compiler to include the named file in the compilation.
{$INCLUDE |}=Instructs the compiler to include the named file in the compilation.
{$I+}=Enables the automatic code generation that checks the result of a call to an I/O procedure.
{$I-}=Disables the automatic code generation that checks the result of a call to an I/O procedure.
{$IOCHECKS ON}=Enables the automatic code generation that checks the result of a call to an I/O procedure.
{$IOCHECKS OFF}=Disables the automatic code generation that checks the result of a call to an I/O procedure.
{$L |}=Instructs the compiler to link the named file with the program or unit being compiled.
{$LINK |}=Instructs the compiler to link the named file with the program or unit being compiled.
{$L+}=Enables the generation of local symbol information.
{$L-}=Disables the generation of local symbol information.
{$LOCALSYMBOLS ON}=Enables the generation of local symbol information.
{$LOCALSYMBOLS OFF}=Disables the generation of local symbol information.
{$H+}=Defines the generic string type to be the long AnsiString.
{$H-}=Uses short strings by default. 
{$LONGSTRINGS ON}=Defines the generic string type to be the long AnsiString.
{$LONGSTRINGS OFF}=Uses short strings by default. 
{$M |,}=Specifies an application's stack allocation parameters.
{$MINSTACKSIZE |}=Specifies an application's minimum stack allocation parameters.
{$MAXSTACKSIZE |}=Specifies an application's maximum stack allocation parameters.
{$Z1}=An enumerated type is stored as an unsigned byte.
{$Z2}=An enumerated type is stored as an unsigned word.
{$Z4}=An enumerated type is stored as an double-word.
{$MINENUMSIZE 1}=An enumerated type is stored as an unsigned byte.
{$MINENUMSIZE 2}=An enumerated type is stored as an unsigned word.
{$MINENUMSIZE 4}=An enumerated type is stored as an double-word.
{$P+}=Variable parameters declared using the string keyword are open string parameters.
{$P-}=Variable parameters declared using the string keyword are normal variable parameters.
{$OPENSTRINGS ON}=Variable parameters declared using the string keyword are open string parameters.
{$OPENSTRINGS OFF}=Variable parameters declared using the string keyword are normal variable parameters.
{$O+}=The compiler performs a number of code optimizations.
{$O-}=All optimizations are disabled.
{$OPTIMIZATION ON}=The compiler performs a number of code optimizations.
{$OPTIMIZATION OFF}=All optimizations are disabled.
{$Q+}=Enables the generation of overflow checking code.
{$Q-}=Disables the generation of overflow checking code.
{$OVERFLOWCHECKS ON}=Enables the generation of overflow checking code.
{$OVERFLOWCHECKS OFF}=Disables the generation of overflow checking code.
{$U+}=Enables the generation of floating-point code that guards against the flawed FDIV instruction exhibited by certain early Pentium processors.
{$U-}=Disables the generation of floating-point code that guards against the flawed FDIV instruction exhibited by certain early Pentium processors.
{$SAFEDIVIDE ON}=Enables the generation of floating-point code that guards against the flawed FDIV instruction exhibited by certain early Pentium processors.
{$SAFEDIVIDE OFF}=Disables the generation of floating-point code that guards against the flawed FDIV instruction exhibited by certain early Pentium processors.
{$NODEFINE |}=Prevents the specified symbol from being included in the header file generated for C++Builder.
{$NOINCLUDE |}=Prevents the specified file from being included in header files generated for C++Builder.
{$R+}=Enables the generation of range-checking code.
{$R-}=Disables the generation of range-checking code.
{$RANGECHECKS ON}=Enables the generation of range-checking code.
{$RANGECHECKS OFF}=Disables the generation of range-checking code.
{$REALCOMPATIBILITY ON}=Real is equivalent to Real48.
{$REALCOMPATIBILITY OFF}=The generic Real type is equivalent to Double.
{$R |}=Specifies the name of a resource file to be included in an application or library. 
{$R *.RES}=Specifies the name of a resource file to be included in an application or library. 
{$RESOURCE |}=Specifies the name of a resource file to be included in an application or library. 
{$RUNONLY ON}=Causes the package where it occurs to be compiled as runtime only.
{$RUNONLY OFF}==Turns off the switch of runtime only.
{$Y+}=The compiler records information about where every identifier is used as well as where it is defined.
{$Y-}=No symbol reference information is recorded.
{$YD}=The compiler records information about where each identifier is defined.
{$REFERENCEINFO ON}=The compiler records information about where every identifier is used as well as where it is defined.
{$REFERENCEINFO OFF}=No symbol reference information is recorded.
{$DEFINITIONINFO ON}=The compiler records information about where each identifier is defined.
{$DEFINITIONINFO OFF}=No symbol reference information is recorded.
{$T+}=The result is a typed pointer that is compatible only with Pointer and with other pointers to the type of the variable.
{$T-}=The result of the @ operator is always an untyped pointer (Pointer) that is compatible with all other pointer types.
{$TYPEDADDRESS ON}=The result is a typed pointer that is compatible only with Pointer and with other pointers to the type of the variable.
{$TYPEDADDRESS OFF}=The result of the @ operator is always an untyped pointer (Pointer) that is compatible with all other pointer types.
{$UNDEF |}=Undefines a previously defined conditional symbol.
{$V+}=Requiring the formal and actual parameters to be of identical string types.
{$V-}=Any short string type variable is allowed as an actual parameter, even if the declared maximum length is not the same as that of the formal parameter.
{$VARSTRINGCHECKS ON}=Requiring the formal and actual parameters to be of identical string types.
{$VARSTRINGCHECKS OFF}=Any short string type variable is allowed as an actual parameter, even if the declared maximum length is not the same as that of the formal parameter.
{$WARNINGS ON}=Enables the generation of compiler warnings.
{$WARNINGS OFF}=Disables the generation of compiler warnings.
{$WEAKPACKAGEUNIT ON}=Affects the way a .DCU file is stored in a package's .DCP and .BPL files.
{$WEAKPACKAGEUNIT OFF}=Affects the way a .DCU file is stored in a package's .DCP and .BPL files.
{$W+}=Enables the generation of stack frames for procedures and functions.
{$W-}=Disables the generation of stack frames for procedures and functions.
{$STACKFRAMES ON}=Enables the generation of stack frames for procedures and functions.
{$STACKFRAMES OFF}=Disables the generation of stack frames for procedures and functions.
{$J+}=Typed constants can be modified.
{$J-}=Typed constants can not be modified.
{$WRITEABLECONST ON}=Typed constants can be modified.
{$WRITEABLECONST OFF}=Typed constants can not be modified.

[D6]
{$A1}=Fields are never aligned.
{$A2}=Fields are aligned on word boundaries.
{$A4}=Fields are aligned on double-word boundaries.
{$A8}=Fields are aligned on quad word boundaries.
{$IF |}=Compiles the Delphi source code that follows it if expression is true.
{$IF Defined(|)}=Compiles the Delphi source code that follows it if symbol is defined.
{$IF Declared(|)}=Compiles the Delphi source code that follows it if symbol is declared.
{$G+}=Enables creation of imported data references.
{$G-}=Disables creation of imported data references.
{$IMPORTEDDATA ON}=Enables creation of imported data references.
{$IMPORTEDDATA OFF}=Disables creation of imported data references.
{$SetPEFlags |}=Set flag bits in the PE file header Characteristics field and PE file optional header DLLCharacteristics field, respectively.
{$SetPEOptFlags |}=Set flag bits in the PE file header Characteristics field and PE file optional header DLLCharacteristics field, respectively.
{$WARN SYMBOL_PLATFORM ON}=Turns on all warnings about the platform directive on symbols in the current unit.
{$WARN SYMBOL_PLATFORM OFF}=Turns off all warnings about the platform directive on symbols in the current unit.
{$WARN SYMBOL_LIBRARY ON}=Turns on all warnings about the library directive on symbols in the current unit.
{$WARN SYMBOL_LIBRARY OFF}=Turns off all warnings about the library directive on symbols in the current unit.
{$WARN SYMBOL_DEPRECATED ON}=Turns on all warnings about the deprecated directive on symbols in the current unit.
{$WARN SYMBOL_DEPRECATED OFF}=Turns off all warnings about the deprecated directive on symbols in the current unit.
{$WARN UNIT_DEPRECATED ON}=Turns on all warnings about the deprecated directive applied to a unit declaration.
{$WARN UNIT_DEPRECATED OFF}=Turns off all warnings about the deprecated directive applied to a unit declaration.
{$WARN UNIT_LIBRARY ON}=Turns on all warnings about the library directive in units where the library directive is specified.
{$WARN UNIT_LIBRARY OFF}=Turns off all warnings about the library directive in units where the library directive is specified.
{$WARN UNIT_PLATFORM ON}=Turns on all warnings about the platform directive in units where the platform directive is specified.
{$WARN UNIT_PLATFORM OFF}=Turns off all warnings about the platform directive in units where the platform directive is specified.

[D7]
{$LIBPREFIX '|'}=Overrides the default 'lib' or 'bpl' prefix in the output file name.
{$LIBSUFFIX '|'}=Adds a specified suffix to the output file name before the extension. 
{$LIBVERSION '|'}=Adds a second extension to the output file name after the extension.
{$METHODINFO ON}=Enable creation of method information RTTI.
{$METHODINFO OFF}=Disable creation of method information RTTI.

[D8]
{$MESSAGE '|'}=Emit hint just as the compiler does.
{$MESSAGE HINT '|'}=Emit hint just as the compiler does.
{$MESSAGE WARN '|'}=Emit warning just as the compiler does.
{$MESSAGE ERROR '|'}=Emit error just as the compiler does.
{$MESSAGE FATAL '|'}=Emit fatal just as the compiler does.
{$UNSAFECODE ON}=Can mark procedures and functions with the unsafe keyword.
{$UNSAFECODE OFF}=Can not mark procedures and functions with the unsafe keyword.
{$REGION '|'}=Specify a block of code that you can expand or collapse.
{$ENDREGION}=Specify a block of code that you can expand or collapse.

[D9]